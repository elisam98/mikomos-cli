eval("//# sourceURL=assets/ember-cli/loader.js");

;eval("define(\"mikomos/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: \'mikomos\', // TODO: loaded via config\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, \'mikomos\');\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=mikomos/app.js");

;eval("define(\"mikomos/components/auto-complete\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Component.extend({\n    	searchText: \'\',\n    	searchResults: function() {\n    		var searchText = this.get(\'searchText\');\n    		var model = this.get(\'model\');\n    		var result;\n    		\n    		if (!searchText){\n    			return;\n    		}\n    		if (searchText.length > 2) {\n    			var regex = new RegExp(searchText, \'i\');\n    			result = model.filter(function(item) {\n    				return item.title.match(regex);\n    			});\n    		}\n    		return result;\n    	}.property(\'searchText\'),\n    	actions: {\n    		search: function() {\n    			var query = this.get(\'searchText\');\n    //			console.log(query);\n    			this.sendAction(\'search\', query);\n    		}\n    	}\n    });\n  });//# sourceURL=mikomos/components/auto-complete.js");

;eval("define(\"mikomos/components/back-button\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Component.extend({\n    	tagName: \'button\',\n    	classNames: [\'btn\', \'btn-default\', \'navbar-btn\'],\n    	click: function() {\n    		history.back();\n    	}\n    });\n  });//# sourceURL=mikomos/components/back-button.js");

;eval("define(\"mikomos/components/radio-button\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Component.extend({\n    	tagName : \"input\",\n    	type : \"radio\",\n    	attributeBindings : [\"type\", \"value\", \"checked:checked\"],\n    	click : function() {\n    		this.set(\"selection\", this.$().val());\n    	},\n    	checked : function() {\n    		return this.get(\"value\") === this.get(\"selection\");\n    	}.property(\'selection\')\n    });\n  });//# sourceURL=mikomos/components/radio-button.js");

;eval("define(\"mikomos/components/results-view\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Component.extend({\n    	offset: 0,\n    	limit: 20,\n    	modelLength: function() {\n    		return this.get(\'model\').length;\n    	}.property(\'model\'),\n    	maxRecord: function() {\n    		var limit = this.get(\'limit\');\n    		var offset = this.get(\'offset\');\n    		var length = this.get(\'modelLength\');\n    		var maxRecord = offset + limit;\n    		if(maxRecord > length) {\n    			return length;\n    		}\n    		else {\n    			return maxRecord;\n    		}\n    	}.property(\'offset\', \'limit\', \'modelLength\'),\n    	arrangedContent: function() {\n    		var model = this.get(\'model\');\n    		var limit = this.get(\'limit\');\n    		var offset = this.get(\'offset\');\n    		var sliced = model.slice(offset, offset + limit);\n    		return sliced;\n    	}.property(\'model\', \'offset\', \'limit\'),\n    	noPreviousPage: function() {\n    		return this.get(\'offset\') === 0;\n    	}.property(\'offset\'),\n    	noNextPage: function() {\n    		var limit = this.get(\'limit\');\n    		var offset = this.get(\'offset\');\n    		var length = this.get(\'model\').length;\n    		if(length === 0) {\n    			return true;\n    		} else {\n    			return offset + limit > length;\n    		}\n    	}.property(\'offset\', \'limit\', \'model\'),\n    	actions: {\n    		prevPage: function() {\n    			var offset = this.get(\'offset\');\n    			var	limit = this.get(\'limit\');\n    			if(offset !== 0) {\n    				this.decrementProperty(\'offset\', limit);\n    			}\n    		},\n    		nextPage: function() {\n    			var offset = this.get(\'offset\');\n    			var limit = this.get(\'limit\');\n    			var length = this.get(\'model.length\');\n    			if(offset + limit < length) {\n    				this.incrementProperty(\'offset\', limit);\n    			}\n    		}\n    	}\n    });\n  });//# sourceURL=mikomos/components/results-view.js");

;eval("define(\"mikomos/controllers/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Controller.extend({\n    	isHome: function() {\n    		var path = this.get(\'currentPath\');\n    		return path === \'index\';\n    	}.property(\'currentPath\')\n    });\n  });//# sourceURL=mikomos/controllers/application.js");

;eval("define(\"mikomos/controllers/index\", \n  [\"ember\",\"vendor/moment/moment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var moment = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Controller.extend({\n    	databaseDate: function() {\n    //		var pulled = this.get(\'model.meta.time_pulled\');\n    //		var d = new Date(pulled);\n    		var d = new Date();\n    //		return d.toUTCString(\'en-US\');\n    		return moment.unix(d).fromNow();\n    	}.property(\'model.meta.time_pulled\'),\n    	actions: {\n    		search: function(query) {\n    			this.transitionToRoute(\'search.query\', query);\n    		}\n    	}\n    });\n  });//# sourceURL=mikomos/controllers/index.js");

;eval("define(\"vendor/moment/moment\", \n  [],\n  function() {\n    \"use strict\";\n    //! moment.js\n    //! version : 2.7.0\n    //! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n    //! license : MIT\n    //! momentjs.com\n\n    (function (undefined) {\n\n        /************************************\n            Constants\n        ************************************/\n\n        var moment,\n            VERSION = \"2.7.0\",\n            // the global-scope this is NOT the global object in Node.js\n            globalScope = typeof global !== \'undefined\' ? global : this,\n            oldGlobalMoment,\n            round = Math.round,\n            i,\n\n            YEAR = 0,\n            MONTH = 1,\n            DATE = 2,\n            HOUR = 3,\n            MINUTE = 4,\n            SECOND = 5,\n            MILLISECOND = 6,\n\n            // internal storage for language config files\n            languages = {},\n\n            // moment internal properties\n            momentProperties = {\n                _isAMomentObject: null,\n                _i : null,\n                _f : null,\n                _l : null,\n                _strict : null,\n                _tzm : null,\n                _isUTC : null,\n                _offset : null,  // optional. Combine with _isUTC\n                _pf : null,\n                _lang : null  // optional\n            },\n\n            // check for nodeJS\n            hasModule = (typeof module !== \'undefined\' && module.exports),\n\n            // ASP.NET json date format regex\n            aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i,\n            aspNetTimeSpanJsonRegex = /(\\-)?(?:(\\d*)\\.)?(\\d+)\\:(\\d+)(?:\\:(\\d+)\\.?(\\d{3})?)?/,\n\n            // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n            // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n            isoDurationRegex = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/,\n\n            // format tokens\n            formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|X|zz?|ZZ?|.)/g,\n            localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LT|LL?L?L?|l{1,4})/g,\n\n            // parsing token regexes\n            parseTokenOneOrTwoDigits = /\\d\\d?/, // 0 - 99\n            parseTokenOneToThreeDigits = /\\d{1,3}/, // 0 - 999\n            parseTokenOneToFourDigits = /\\d{1,4}/, // 0 - 9999\n            parseTokenOneToSixDigits = /[+\\-]?\\d{1,6}/, // -999,999 - 999,999\n            parseTokenDigits = /\\d+/, // nonzero number of digits\n            parseTokenWord = /[0-9]*[\'a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i, // any word (or two) characters or numbers including two/three word month in arabic.\n            parseTokenTimezone = /Z|[\\+\\-]\\d\\d:?\\d\\d/gi, // +00:00 -00:00 +0000 -0000 or Z\n            parseTokenT = /T/i, // T (ISO separator)\n            parseTokenTimestampMs = /[\\+\\-]?\\d+(\\.\\d{1,3})?/, // 123456789 123456789.123\n            parseTokenOrdinal = /\\d{1,2}/,\n\n            //strict parsing regexes\n            parseTokenOneDigit = /\\d/, // 0 - 9\n            parseTokenTwoDigits = /\\d\\d/, // 00 - 99\n            parseTokenThreeDigits = /\\d{3}/, // 000 - 999\n            parseTokenFourDigits = /\\d{4}/, // 0000 - 9999\n            parseTokenSixDigits = /[+-]?\\d{6}/, // -999,999 - 999,999\n            parseTokenSignedNumber = /[+-]?\\d+/, // -inf - inf\n\n            // iso 8601 regex\n            // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n            isoRegex = /^\\s*(?:[+-]\\d{6}|\\d{4})-(?:(\\d\\d-\\d\\d)|(W\\d\\d$)|(W\\d\\d-\\d)|(\\d\\d\\d))((T| )(\\d\\d(:\\d\\d(:\\d\\d(\\.\\d+)?)?)?)?([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n\n            isoFormat = \'YYYY-MM-DDTHH:mm:ssZ\',\n\n            isoDates = [\n                [\'YYYYYY-MM-DD\', /[+-]\\d{6}-\\d{2}-\\d{2}/],\n                [\'YYYY-MM-DD\', /\\d{4}-\\d{2}-\\d{2}/],\n                [\'GGGG-[W]WW-E\', /\\d{4}-W\\d{2}-\\d/],\n                [\'GGGG-[W]WW\', /\\d{4}-W\\d{2}/],\n                [\'YYYY-DDD\', /\\d{4}-\\d{3}/]\n            ],\n\n            // iso time formats and regexes\n            isoTimes = [\n                [\'HH:mm:ss.SSSS\', /(T| )\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n                [\'HH:mm:ss\', /(T| )\\d\\d:\\d\\d:\\d\\d/],\n                [\'HH:mm\', /(T| )\\d\\d:\\d\\d/],\n                [\'HH\', /(T| )\\d\\d/]\n            ],\n\n            // timezone chunker \"+10:00\" > [\"10\", \"00\"] or \"-1530\" > [\"-15\", \"30\"]\n            parseTimezoneChunker = /([\\+\\-]|\\d\\d)/gi,\n\n            // getter and setter names\n            proxyGettersAndSetters = \'Date|Hours|Minutes|Seconds|Milliseconds\'.split(\'|\'),\n            unitMillisecondFactors = {\n                \'Milliseconds\' : 1,\n                \'Seconds\' : 1e3,\n                \'Minutes\' : 6e4,\n                \'Hours\' : 36e5,\n                \'Days\' : 864e5,\n                \'Months\' : 2592e6,\n                \'Years\' : 31536e6\n            },\n\n            unitAliases = {\n                ms : \'millisecond\',\n                s : \'second\',\n                m : \'minute\',\n                h : \'hour\',\n                d : \'day\',\n                D : \'date\',\n                w : \'week\',\n                W : \'isoWeek\',\n                M : \'month\',\n                Q : \'quarter\',\n                y : \'year\',\n                DDD : \'dayOfYear\',\n                e : \'weekday\',\n                E : \'isoWeekday\',\n                gg: \'weekYear\',\n                GG: \'isoWeekYear\'\n            },\n\n            camelFunctions = {\n                dayofyear : \'dayOfYear\',\n                isoweekday : \'isoWeekday\',\n                isoweek : \'isoWeek\',\n                weekyear : \'weekYear\',\n                isoweekyear : \'isoWeekYear\'\n            },\n\n            // format function strings\n            formatFunctions = {},\n\n            // default relative time thresholds\n            relativeTimeThresholds = {\n              s: 45,   //seconds to minutes\n              m: 45,   //minutes to hours\n              h: 22,   //hours to days\n              dd: 25,  //days to month (month == 1)\n              dm: 45,  //days to months (months > 1)\n              dy: 345  //days to year\n            },\n\n            // tokens to ordinalize and pad\n            ordinalizeTokens = \'DDD w W M D d\'.split(\' \'),\n            paddedTokens = \'M D H h m s w W\'.split(\' \'),\n\n            formatTokenFunctions = {\n                M    : function () {\n                    return this.month() + 1;\n                },\n                MMM  : function (format) {\n                    return this.lang().monthsShort(this, format);\n                },\n                MMMM : function (format) {\n                    return this.lang().months(this, format);\n                },\n                D    : function () {\n                    return this.date();\n                },\n                DDD  : function () {\n                    return this.dayOfYear();\n                },\n                d    : function () {\n                    return this.day();\n                },\n                dd   : function (format) {\n                    return this.lang().weekdaysMin(this, format);\n                },\n                ddd  : function (format) {\n                    return this.lang().weekdaysShort(this, format);\n                },\n                dddd : function (format) {\n                    return this.lang().weekdays(this, format);\n                },\n                w    : function () {\n                    return this.week();\n                },\n                W    : function () {\n                    return this.isoWeek();\n                },\n                YY   : function () {\n                    return leftZeroFill(this.year() % 100, 2);\n                },\n                YYYY : function () {\n                    return leftZeroFill(this.year(), 4);\n                },\n                YYYYY : function () {\n                    return leftZeroFill(this.year(), 5);\n                },\n                YYYYYY : function () {\n                    var y = this.year(), sign = y >= 0 ? \'+\' : \'-\';\n                    return sign + leftZeroFill(Math.abs(y), 6);\n                },\n                gg   : function () {\n                    return leftZeroFill(this.weekYear() % 100, 2);\n                },\n                gggg : function () {\n                    return leftZeroFill(this.weekYear(), 4);\n                },\n                ggggg : function () {\n                    return leftZeroFill(this.weekYear(), 5);\n                },\n                GG   : function () {\n                    return leftZeroFill(this.isoWeekYear() % 100, 2);\n                },\n                GGGG : function () {\n                    return leftZeroFill(this.isoWeekYear(), 4);\n                },\n                GGGGG : function () {\n                    return leftZeroFill(this.isoWeekYear(), 5);\n                },\n                e : function () {\n                    return this.weekday();\n                },\n                E : function () {\n                    return this.isoWeekday();\n                },\n                a    : function () {\n                    return this.lang().meridiem(this.hours(), this.minutes(), true);\n                },\n                A    : function () {\n                    return this.lang().meridiem(this.hours(), this.minutes(), false);\n                },\n                H    : function () {\n                    return this.hours();\n                },\n                h    : function () {\n                    return this.hours() % 12 || 12;\n                },\n                m    : function () {\n                    return this.minutes();\n                },\n                s    : function () {\n                    return this.seconds();\n                },\n                S    : function () {\n                    return toInt(this.milliseconds() / 100);\n                },\n                SS   : function () {\n                    return leftZeroFill(toInt(this.milliseconds() / 10), 2);\n                },\n                SSS  : function () {\n                    return leftZeroFill(this.milliseconds(), 3);\n                },\n                SSSS : function () {\n                    return leftZeroFill(this.milliseconds(), 3);\n                },\n                Z    : function () {\n                    var a = -this.zone(),\n                        b = \"+\";\n                    if (a < 0) {\n                        a = -a;\n                        b = \"-\";\n                    }\n                    return b + leftZeroFill(toInt(a / 60), 2) + \":\" + leftZeroFill(toInt(a) % 60, 2);\n                },\n                ZZ   : function () {\n                    var a = -this.zone(),\n                        b = \"+\";\n                    if (a < 0) {\n                        a = -a;\n                        b = \"-\";\n                    }\n                    return b + leftZeroFill(toInt(a / 60), 2) + leftZeroFill(toInt(a) % 60, 2);\n                },\n                z : function () {\n                    return this.zoneAbbr();\n                },\n                zz : function () {\n                    return this.zoneName();\n                },\n                X    : function () {\n                    return this.unix();\n                },\n                Q : function () {\n                    return this.quarter();\n                }\n            },\n\n            lists = [\'months\', \'monthsShort\', \'weekdays\', \'weekdaysShort\', \'weekdaysMin\'];\n\n        // Pick the first defined of two or three arguments. dfl comes from\n        // default.\n        function dfl(a, b, c) {\n            switch (arguments.length) {\n                case 2: return a != null ? a : b;\n                case 3: return a != null ? a : b != null ? b : c;\n                default: throw new Error(\"Implement me\");\n            }\n        }\n\n        function defaultParsingFlags() {\n            // We need to deep clone this object, and es5 standard is not very\n            // helpful.\n            return {\n                empty : false,\n                unusedTokens : [],\n                unusedInput : [],\n                overflow : -2,\n                charsLeftOver : 0,\n                nullInput : false,\n                invalidMonth : null,\n                invalidFormat : false,\n                userInvalidated : false,\n                iso: false\n            };\n        }\n\n        function deprecate(msg, fn) {\n            var firstTime = true;\n            function printMsg() {\n                if (moment.suppressDeprecationWarnings === false &&\n                        typeof console !== \'undefined\' && console.warn) {\n                    console.warn(\"Deprecation warning: \" + msg);\n                }\n            }\n            return extend(function () {\n                if (firstTime) {\n                    printMsg();\n                    firstTime = false;\n                }\n                return fn.apply(this, arguments);\n            }, fn);\n        }\n\n        function padToken(func, count) {\n            return function (a) {\n                return leftZeroFill(func.call(this, a), count);\n            };\n        }\n        function ordinalizeToken(func, period) {\n            return function (a) {\n                return this.lang().ordinal(func.call(this, a), period);\n            };\n        }\n\n        while (ordinalizeTokens.length) {\n            i = ordinalizeTokens.pop();\n            formatTokenFunctions[i + \'o\'] = ordinalizeToken(formatTokenFunctions[i], i);\n        }\n        while (paddedTokens.length) {\n            i = paddedTokens.pop();\n            formatTokenFunctions[i + i] = padToken(formatTokenFunctions[i], 2);\n        }\n        formatTokenFunctions.DDDD = padToken(formatTokenFunctions.DDD, 3);\n\n\n        /************************************\n            Constructors\n        ************************************/\n\n        function Language() {\n\n        }\n\n        // Moment prototype object\n        function Moment(config) {\n            checkOverflow(config);\n            extend(this, config);\n        }\n\n        // Duration Constructor\n        function Duration(duration) {\n            var normalizedInput = normalizeObjectUnits(duration),\n                years = normalizedInput.year || 0,\n                quarters = normalizedInput.quarter || 0,\n                months = normalizedInput.month || 0,\n                weeks = normalizedInput.week || 0,\n                days = normalizedInput.day || 0,\n                hours = normalizedInput.hour || 0,\n                minutes = normalizedInput.minute || 0,\n                seconds = normalizedInput.second || 0,\n                milliseconds = normalizedInput.millisecond || 0;\n\n            // representation for dateAddRemove\n            this._milliseconds = +milliseconds +\n                seconds * 1e3 + // 1000\n                minutes * 6e4 + // 1000 * 60\n                hours * 36e5; // 1000 * 60 * 60\n            // Because of dateAddRemove treats 24 hours as different from a\n            // day when working around DST, we need to store them separately\n            this._days = +days +\n                weeks * 7;\n            // It is impossible translate months into days without knowing\n            // which months you are are talking about, so we have to store\n            // it separately.\n            this._months = +months +\n                quarters * 3 +\n                years * 12;\n\n            this._data = {};\n\n            this._bubble();\n        }\n\n        /************************************\n            Helpers\n        ************************************/\n\n\n        function extend(a, b) {\n            for (var i in b) {\n                if (b.hasOwnProperty(i)) {\n                    a[i] = b[i];\n                }\n            }\n\n            if (b.hasOwnProperty(\"toString\")) {\n                a.toString = b.toString;\n            }\n\n            if (b.hasOwnProperty(\"valueOf\")) {\n                a.valueOf = b.valueOf;\n            }\n\n            return a;\n        }\n\n        function cloneMoment(m) {\n            var result = {}, i;\n            for (i in m) {\n                if (m.hasOwnProperty(i) && momentProperties.hasOwnProperty(i)) {\n                    result[i] = m[i];\n                }\n            }\n\n            return result;\n        }\n\n        function absRound(number) {\n            if (number < 0) {\n                return Math.ceil(number);\n            } else {\n                return Math.floor(number);\n            }\n        }\n\n        // left zero fill a number\n        // see http://jsperf.com/left-zero-filling for performance comparison\n        function leftZeroFill(number, targetLength, forceSign) {\n            var output = \'\' + Math.abs(number),\n                sign = number >= 0;\n\n            while (output.length < targetLength) {\n                output = \'0\' + output;\n            }\n            return (sign ? (forceSign ? \'+\' : \'\') : \'-\') + output;\n        }\n\n        // helper function for _.addTime and _.subtractTime\n        function addOrSubtractDurationFromMoment(mom, duration, isAdding, updateOffset) {\n            var milliseconds = duration._milliseconds,\n                days = duration._days,\n                months = duration._months;\n            updateOffset = updateOffset == null ? true : updateOffset;\n\n            if (milliseconds) {\n                mom._d.setTime(+mom._d + milliseconds * isAdding);\n            }\n            if (days) {\n                rawSetter(mom, \'Date\', rawGetter(mom, \'Date\') + days * isAdding);\n            }\n            if (months) {\n                rawMonthSetter(mom, rawGetter(mom, \'Month\') + months * isAdding);\n            }\n            if (updateOffset) {\n                moment.updateOffset(mom, days || months);\n            }\n        }\n\n        // check if is an array\n        function isArray(input) {\n            return Object.prototype.toString.call(input) === \'[object Array]\';\n        }\n\n        function isDate(input) {\n            return  Object.prototype.toString.call(input) === \'[object Date]\' ||\n                    input instanceof Date;\n        }\n\n        // compare two arrays, return the number of differences\n        function compareArrays(array1, array2, dontConvert) {\n            var len = Math.min(array1.length, array2.length),\n                lengthDiff = Math.abs(array1.length - array2.length),\n                diffs = 0,\n                i;\n            for (i = 0; i < len; i++) {\n                if ((dontConvert && array1[i] !== array2[i]) ||\n                    (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                    diffs++;\n                }\n            }\n            return diffs + lengthDiff;\n        }\n\n        function normalizeUnits(units) {\n            if (units) {\n                var lowered = units.toLowerCase().replace(/(.)s$/, \'$1\');\n                units = unitAliases[units] || camelFunctions[lowered] || lowered;\n            }\n            return units;\n        }\n\n        function normalizeObjectUnits(inputObject) {\n            var normalizedInput = {},\n                normalizedProp,\n                prop;\n\n            for (prop in inputObject) {\n                if (inputObject.hasOwnProperty(prop)) {\n                    normalizedProp = normalizeUnits(prop);\n                    if (normalizedProp) {\n                        normalizedInput[normalizedProp] = inputObject[prop];\n                    }\n                }\n            }\n\n            return normalizedInput;\n        }\n\n        function makeList(field) {\n            var count, setter;\n\n            if (field.indexOf(\'week\') === 0) {\n                count = 7;\n                setter = \'day\';\n            }\n            else if (field.indexOf(\'month\') === 0) {\n                count = 12;\n                setter = \'month\';\n            }\n            else {\n                return;\n            }\n\n            moment[field] = function (format, index) {\n                var i, getter,\n                    method = moment.fn._lang[field],\n                    results = [];\n\n                if (typeof format === \'number\') {\n                    index = format;\n                    format = undefined;\n                }\n\n                getter = function (i) {\n                    var m = moment().utc().set(setter, i);\n                    return method.call(moment.fn._lang, m, format || \'\');\n                };\n\n                if (index != null) {\n                    return getter(index);\n                }\n                else {\n                    for (i = 0; i < count; i++) {\n                        results.push(getter(i));\n                    }\n                    return results;\n                }\n            };\n        }\n\n        function toInt(argumentForCoercion) {\n            var coercedNumber = +argumentForCoercion,\n                value = 0;\n\n            if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n                if (coercedNumber >= 0) {\n                    value = Math.floor(coercedNumber);\n                } else {\n                    value = Math.ceil(coercedNumber);\n                }\n            }\n\n            return value;\n        }\n\n        function daysInMonth(year, month) {\n            return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n        }\n\n        function weeksInYear(year, dow, doy) {\n            return weekOfYear(moment([year, 11, 31 + dow - doy]), dow, doy).week;\n        }\n\n        function daysInYear(year) {\n            return isLeapYear(year) ? 366 : 365;\n        }\n\n        function isLeapYear(year) {\n            return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n        }\n\n        function checkOverflow(m) {\n            var overflow;\n            if (m._a && m._pf.overflow === -2) {\n                overflow =\n                    m._a[MONTH] < 0 || m._a[MONTH] > 11 ? MONTH :\n                    m._a[DATE] < 1 || m._a[DATE] > daysInMonth(m._a[YEAR], m._a[MONTH]) ? DATE :\n                    m._a[HOUR] < 0 || m._a[HOUR] > 23 ? HOUR :\n                    m._a[MINUTE] < 0 || m._a[MINUTE] > 59 ? MINUTE :\n                    m._a[SECOND] < 0 || m._a[SECOND] > 59 ? SECOND :\n                    m._a[MILLISECOND] < 0 || m._a[MILLISECOND] > 999 ? MILLISECOND :\n                    -1;\n\n                if (m._pf._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                    overflow = DATE;\n                }\n\n                m._pf.overflow = overflow;\n            }\n        }\n\n        function isValid(m) {\n            if (m._isValid == null) {\n                m._isValid = !isNaN(m._d.getTime()) &&\n                    m._pf.overflow < 0 &&\n                    !m._pf.empty &&\n                    !m._pf.invalidMonth &&\n                    !m._pf.nullInput &&\n                    !m._pf.invalidFormat &&\n                    !m._pf.userInvalidated;\n\n                if (m._strict) {\n                    m._isValid = m._isValid &&\n                        m._pf.charsLeftOver === 0 &&\n                        m._pf.unusedTokens.length === 0;\n                }\n            }\n            return m._isValid;\n        }\n\n        function normalizeLanguage(key) {\n            return key ? key.toLowerCase().replace(\'_\', \'-\') : key;\n        }\n\n        // Return a moment from input, that is local/utc/zone equivalent to model.\n        function makeAs(input, model) {\n            return model._isUTC ? moment(input).zone(model._offset || 0) :\n                moment(input).local();\n        }\n\n        /************************************\n            Languages\n        ************************************/\n\n\n        extend(Language.prototype, {\n\n            set : function (config) {\n                var prop, i;\n                for (i in config) {\n                    prop = config[i];\n                    if (typeof prop === \'function\') {\n                        this[i] = prop;\n                    } else {\n                        this[\'_\' + i] = prop;\n                    }\n                }\n            },\n\n            _months : \"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),\n            months : function (m) {\n                return this._months[m.month()];\n            },\n\n            _monthsShort : \"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\"),\n            monthsShort : function (m) {\n                return this._monthsShort[m.month()];\n            },\n\n            monthsParse : function (monthName) {\n                var i, mom, regex;\n\n                if (!this._monthsParse) {\n                    this._monthsParse = [];\n                }\n\n                for (i = 0; i < 12; i++) {\n                    // make the regex if we don\'t have it already\n                    if (!this._monthsParse[i]) {\n                        mom = moment.utc([2000, i]);\n                        regex = \'^\' + this.months(mom, \'\') + \'|^\' + this.monthsShort(mom, \'\');\n                        this._monthsParse[i] = new RegExp(regex.replace(\'.\', \'\'), \'i\');\n                    }\n                    // test the regex\n                    if (this._monthsParse[i].test(monthName)) {\n                        return i;\n                    }\n                }\n            },\n\n            _weekdays : \"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),\n            weekdays : function (m) {\n                return this._weekdays[m.day()];\n            },\n\n            _weekdaysShort : \"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),\n            weekdaysShort : function (m) {\n                return this._weekdaysShort[m.day()];\n            },\n\n            _weekdaysMin : \"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),\n            weekdaysMin : function (m) {\n                return this._weekdaysMin[m.day()];\n            },\n\n            weekdaysParse : function (weekdayName) {\n                var i, mom, regex;\n\n                if (!this._weekdaysParse) {\n                    this._weekdaysParse = [];\n                }\n\n                for (i = 0; i < 7; i++) {\n                    // make the regex if we don\'t have it already\n                    if (!this._weekdaysParse[i]) {\n                        mom = moment([2000, 1]).day(i);\n                        regex = \'^\' + this.weekdays(mom, \'\') + \'|^\' + this.weekdaysShort(mom, \'\') + \'|^\' + this.weekdaysMin(mom, \'\');\n                        this._weekdaysParse[i] = new RegExp(regex.replace(\'.\', \'\'), \'i\');\n                    }\n                    // test the regex\n                    if (this._weekdaysParse[i].test(weekdayName)) {\n                        return i;\n                    }\n                }\n            },\n\n            _longDateFormat : {\n                LT : \"h:mm A\",\n                L : \"MM/DD/YYYY\",\n                LL : \"MMMM D YYYY\",\n                LLL : \"MMMM D YYYY LT\",\n                LLLL : \"dddd, MMMM D YYYY LT\"\n            },\n            longDateFormat : function (key) {\n                var output = this._longDateFormat[key];\n                if (!output && this._longDateFormat[key.toUpperCase()]) {\n                    output = this._longDateFormat[key.toUpperCase()].replace(/MMMM|MM|DD|dddd/g, function (val) {\n                        return val.slice(1);\n                    });\n                    this._longDateFormat[key] = output;\n                }\n                return output;\n            },\n\n            isPM : function (input) {\n                // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n                // Using charAt should be more compatible.\n                return ((input + \'\').toLowerCase().charAt(0) === \'p\');\n            },\n\n            _meridiemParse : /[ap]\\.?m?\\.?/i,\n            meridiem : function (hours, minutes, isLower) {\n                if (hours > 11) {\n                    return isLower ? \'pm\' : \'PM\';\n                } else {\n                    return isLower ? \'am\' : \'AM\';\n                }\n            },\n\n            _calendar : {\n                sameDay : \'[Today at] LT\',\n                nextDay : \'[Tomorrow at] LT\',\n                nextWeek : \'dddd [at] LT\',\n                lastDay : \'[Yesterday at] LT\',\n                lastWeek : \'[Last] dddd [at] LT\',\n                sameElse : \'L\'\n            },\n            calendar : function (key, mom) {\n                var output = this._calendar[key];\n                return typeof output === \'function\' ? output.apply(mom) : output;\n            },\n\n            _relativeTime : {\n                future : \"in %s\",\n                past : \"%s ago\",\n                s : \"a few seconds\",\n                m : \"a minute\",\n                mm : \"%d minutes\",\n                h : \"an hour\",\n                hh : \"%d hours\",\n                d : \"a day\",\n                dd : \"%d days\",\n                M : \"a month\",\n                MM : \"%d months\",\n                y : \"a year\",\n                yy : \"%d years\"\n            },\n            relativeTime : function (number, withoutSuffix, string, isFuture) {\n                var output = this._relativeTime[string];\n                return (typeof output === \'function\') ?\n                    output(number, withoutSuffix, string, isFuture) :\n                    output.replace(/%d/i, number);\n            },\n            pastFuture : function (diff, output) {\n                var format = this._relativeTime[diff > 0 ? \'future\' : \'past\'];\n                return typeof format === \'function\' ? format(output) : format.replace(/%s/i, output);\n            },\n\n            ordinal : function (number) {\n                return this._ordinal.replace(\"%d\", number);\n            },\n            _ordinal : \"%d\",\n\n            preparse : function (string) {\n                return string;\n            },\n\n            postformat : function (string) {\n                return string;\n            },\n\n            week : function (mom) {\n                return weekOfYear(mom, this._week.dow, this._week.doy).week;\n            },\n\n            _week : {\n                dow : 0, // Sunday is the first day of the week.\n                doy : 6  // The week that contains Jan 1st is the first week of the year.\n            },\n\n            _invalidDate: \'Invalid date\',\n            invalidDate: function () {\n                return this._invalidDate;\n            }\n        });\n\n        // Loads a language definition into the `languages` cache.  The function\n        // takes a key and optionally values.  If not in the browser and no values\n        // are provided, it will load the language file module.  As a convenience,\n        // this function also returns the language values.\n        function loadLang(key, values) {\n            values.abbr = key;\n            if (!languages[key]) {\n                languages[key] = new Language();\n            }\n            languages[key].set(values);\n            return languages[key];\n        }\n\n        // Remove a language from the `languages` cache. Mostly useful in tests.\n        function unloadLang(key) {\n            delete languages[key];\n        }\n\n        // Determines which language definition to use and returns it.\n        //\n        // With no parameters, it will return the global language.  If you\n        // pass in a language key, such as \'en\', it will return the\n        // definition for \'en\', so long as \'en\' has already been loaded using\n        // moment.lang.\n        function getLangDefinition(key) {\n            var i = 0, j, lang, next, split,\n                get = function (k) {\n                    if (!languages[k] && hasModule) {\n                        try {\n                            require(\'./lang/\' + k);\n                        } catch (e) { }\n                    }\n                    return languages[k];\n                };\n\n            if (!key) {\n                return moment.fn._lang;\n            }\n\n            if (!isArray(key)) {\n                //short-circuit everything else\n                lang = get(key);\n                if (lang) {\n                    return lang;\n                }\n                key = [key];\n            }\n\n            //pick the language from the array\n            //try [\'en-au\', \'en-gb\'] as \'en-au\', \'en-gb\', \'en\', as in move through the list trying each\n            //substring from most specific to least, but move to the next array item if it\'s a more specific variant than the current root\n            while (i < key.length) {\n                split = normalizeLanguage(key[i]).split(\'-\');\n                j = split.length;\n                next = normalizeLanguage(key[i + 1]);\n                next = next ? next.split(\'-\') : null;\n                while (j > 0) {\n                    lang = get(split.slice(0, j).join(\'-\'));\n                    if (lang) {\n                        return lang;\n                    }\n                    if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                        //the next array item is better than a shallower substring of this one\n                        break;\n                    }\n                    j--;\n                }\n                i++;\n            }\n            return moment.fn._lang;\n        }\n\n        /************************************\n            Formatting\n        ************************************/\n\n\n        function removeFormattingTokens(input) {\n            if (input.match(/\\[[\\s\\S]/)) {\n                return input.replace(/^\\[|\\]$/g, \"\");\n            }\n            return input.replace(/\\\\/g, \"\");\n        }\n\n        function makeFormatFunction(format) {\n            var array = format.match(formattingTokens), i, length;\n\n            for (i = 0, length = array.length; i < length; i++) {\n                if (formatTokenFunctions[array[i]]) {\n                    array[i] = formatTokenFunctions[array[i]];\n                } else {\n                    array[i] = removeFormattingTokens(array[i]);\n                }\n            }\n\n            return function (mom) {\n                var output = \"\";\n                for (i = 0; i < length; i++) {\n                    output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];\n                }\n                return output;\n            };\n        }\n\n        // format date using native date object\n        function formatMoment(m, format) {\n\n            if (!m.isValid()) {\n                return m.lang().invalidDate();\n            }\n\n            format = expandFormat(format, m.lang());\n\n            if (!formatFunctions[format]) {\n                formatFunctions[format] = makeFormatFunction(format);\n            }\n\n            return formatFunctions[format](m);\n        }\n\n        function expandFormat(format, lang) {\n            var i = 5;\n\n            function replaceLongDateFormatTokens(input) {\n                return lang.longDateFormat(input) || input;\n            }\n\n            localFormattingTokens.lastIndex = 0;\n            while (i >= 0 && localFormattingTokens.test(format)) {\n                format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n                localFormattingTokens.lastIndex = 0;\n                i -= 1;\n            }\n\n            return format;\n        }\n\n\n        /************************************\n            Parsing\n        ************************************/\n\n\n        // get the regex to find the next token\n        function getParseRegexForToken(token, config) {\n            var a, strict = config._strict;\n            switch (token) {\n            case \'Q\':\n                return parseTokenOneDigit;\n            case \'DDDD\':\n                return parseTokenThreeDigits;\n            case \'YYYY\':\n            case \'GGGG\':\n            case \'gggg\':\n                return strict ? parseTokenFourDigits : parseTokenOneToFourDigits;\n            case \'Y\':\n            case \'G\':\n            case \'g\':\n                return parseTokenSignedNumber;\n            case \'YYYYYY\':\n            case \'YYYYY\':\n            case \'GGGGG\':\n            case \'ggggg\':\n                return strict ? parseTokenSixDigits : parseTokenOneToSixDigits;\n            case \'S\':\n                if (strict) { return parseTokenOneDigit; }\n                /* falls through */\n            case \'SS\':\n                if (strict) { return parseTokenTwoDigits; }\n                /* falls through */\n            case \'SSS\':\n                if (strict) { return parseTokenThreeDigits; }\n                /* falls through */\n            case \'DDD\':\n                return parseTokenOneToThreeDigits;\n            case \'MMM\':\n            case \'MMMM\':\n            case \'dd\':\n            case \'ddd\':\n            case \'dddd\':\n                return parseTokenWord;\n            case \'a\':\n            case \'A\':\n                return getLangDefinition(config._l)._meridiemParse;\n            case \'X\':\n                return parseTokenTimestampMs;\n            case \'Z\':\n            case \'ZZ\':\n                return parseTokenTimezone;\n            case \'T\':\n                return parseTokenT;\n            case \'SSSS\':\n                return parseTokenDigits;\n            case \'MM\':\n            case \'DD\':\n            case \'YY\':\n            case \'GG\':\n            case \'gg\':\n            case \'HH\':\n            case \'hh\':\n            case \'mm\':\n            case \'ss\':\n            case \'ww\':\n            case \'WW\':\n                return strict ? parseTokenTwoDigits : parseTokenOneOrTwoDigits;\n            case \'M\':\n            case \'D\':\n            case \'d\':\n            case \'H\':\n            case \'h\':\n            case \'m\':\n            case \'s\':\n            case \'w\':\n            case \'W\':\n            case \'e\':\n            case \'E\':\n                return parseTokenOneOrTwoDigits;\n            case \'Do\':\n                return parseTokenOrdinal;\n            default :\n                a = new RegExp(regexpEscape(unescapeFormat(token.replace(\'\\\\\', \'\')), \"i\"));\n                return a;\n            }\n        }\n\n        function timezoneMinutesFromString(string) {\n            string = string || \"\";\n            var possibleTzMatches = (string.match(parseTokenTimezone) || []),\n                tzChunk = possibleTzMatches[possibleTzMatches.length - 1] || [],\n                parts = (tzChunk + \'\').match(parseTimezoneChunker) || [\'-\', 0, 0],\n                minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n            return parts[0] === \'+\' ? -minutes : minutes;\n        }\n\n        // function to convert string input to date\n        function addTimeToArrayFromToken(token, input, config) {\n            var a, datePartArray = config._a;\n\n            switch (token) {\n            // QUARTER\n            case \'Q\':\n                if (input != null) {\n                    datePartArray[MONTH] = (toInt(input) - 1) * 3;\n                }\n                break;\n            // MONTH\n            case \'M\' : // fall through to MM\n            case \'MM\' :\n                if (input != null) {\n                    datePartArray[MONTH] = toInt(input) - 1;\n                }\n                break;\n            case \'MMM\' : // fall through to MMMM\n            case \'MMMM\' :\n                a = getLangDefinition(config._l).monthsParse(input);\n                // if we didn\'t find a month name, mark the date as invalid.\n                if (a != null) {\n                    datePartArray[MONTH] = a;\n                } else {\n                    config._pf.invalidMonth = input;\n                }\n                break;\n            // DAY OF MONTH\n            case \'D\' : // fall through to DD\n            case \'DD\' :\n                if (input != null) {\n                    datePartArray[DATE] = toInt(input);\n                }\n                break;\n            case \'Do\' :\n                if (input != null) {\n                    datePartArray[DATE] = toInt(parseInt(input, 10));\n                }\n                break;\n            // DAY OF YEAR\n            case \'DDD\' : // fall through to DDDD\n            case \'DDDD\' :\n                if (input != null) {\n                    config._dayOfYear = toInt(input);\n                }\n\n                break;\n            // YEAR\n            case \'YY\' :\n                datePartArray[YEAR] = moment.parseTwoDigitYear(input);\n                break;\n            case \'YYYY\' :\n            case \'YYYYY\' :\n            case \'YYYYYY\' :\n                datePartArray[YEAR] = toInt(input);\n                break;\n            // AM / PM\n            case \'a\' : // fall through to A\n            case \'A\' :\n                config._isPm = getLangDefinition(config._l).isPM(input);\n                break;\n            // 24 HOUR\n            case \'H\' : // fall through to hh\n            case \'HH\' : // fall through to hh\n            case \'h\' : // fall through to hh\n            case \'hh\' :\n                datePartArray[HOUR] = toInt(input);\n                break;\n            // MINUTE\n            case \'m\' : // fall through to mm\n            case \'mm\' :\n                datePartArray[MINUTE] = toInt(input);\n                break;\n            // SECOND\n            case \'s\' : // fall through to ss\n            case \'ss\' :\n                datePartArray[SECOND] = toInt(input);\n                break;\n            // MILLISECOND\n            case \'S\' :\n            case \'SS\' :\n            case \'SSS\' :\n            case \'SSSS\' :\n                datePartArray[MILLISECOND] = toInt((\'0.\' + input) * 1000);\n                break;\n            // UNIX TIMESTAMP WITH MS\n            case \'X\':\n                config._d = new Date(parseFloat(input) * 1000);\n                break;\n            // TIMEZONE\n            case \'Z\' : // fall through to ZZ\n            case \'ZZ\' :\n                config._useUTC = true;\n                config._tzm = timezoneMinutesFromString(input);\n                break;\n            // WEEKDAY - human\n            case \'dd\':\n            case \'ddd\':\n            case \'dddd\':\n                a = getLangDefinition(config._l).weekdaysParse(input);\n                // if we didn\'t get a weekday name, mark the date as invalid\n                if (a != null) {\n                    config._w = config._w || {};\n                    config._w[\'d\'] = a;\n                } else {\n                    config._pf.invalidWeekday = input;\n                }\n                break;\n            // WEEK, WEEK DAY - numeric\n            case \'w\':\n            case \'ww\':\n            case \'W\':\n            case \'WW\':\n            case \'d\':\n            case \'e\':\n            case \'E\':\n                token = token.substr(0, 1);\n                /* falls through */\n            case \'gggg\':\n            case \'GGGG\':\n            case \'GGGGG\':\n                token = token.substr(0, 2);\n                if (input) {\n                    config._w = config._w || {};\n                    config._w[token] = toInt(input);\n                }\n                break;\n            case \'gg\':\n            case \'GG\':\n                config._w = config._w || {};\n                config._w[token] = moment.parseTwoDigitYear(input);\n            }\n        }\n\n        function dayOfYearFromWeekInfo(config) {\n            var w, weekYear, week, weekday, dow, doy, temp, lang;\n\n            w = config._w;\n            if (w.GG != null || w.W != null || w.E != null) {\n                dow = 1;\n                doy = 4;\n\n                // TODO: We need to take the current isoWeekYear, but that depends on\n                // how we interpret now (local, utc, fixed offset). So create\n                // a now version of current config (take local/utc/offset flags, and\n                // create now).\n                weekYear = dfl(w.GG, config._a[YEAR], weekOfYear(moment(), 1, 4).year);\n                week = dfl(w.W, 1);\n                weekday = dfl(w.E, 1);\n            } else {\n                lang = getLangDefinition(config._l);\n                dow = lang._week.dow;\n                doy = lang._week.doy;\n\n                weekYear = dfl(w.gg, config._a[YEAR], weekOfYear(moment(), dow, doy).year);\n                week = dfl(w.w, 1);\n\n                if (w.d != null) {\n                    // weekday -- low day numbers are considered next week\n                    weekday = w.d;\n                    if (weekday < dow) {\n                        ++week;\n                    }\n                } else if (w.e != null) {\n                    // local weekday -- counting starts from begining of week\n                    weekday = w.e + dow;\n                } else {\n                    // default to begining of week\n                    weekday = dow;\n                }\n            }\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, doy, dow);\n\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n\n        // convert an array to a date.\n        // the array should mirror the parameters below\n        // note: all values past the year are optional and will default to the lowest possible value.\n        // [year, month, day , hour, minute, second, millisecond]\n        function dateFromConfig(config) {\n            var i, date, input = [], currentDate, yearToUse;\n\n            if (config._d) {\n                return;\n            }\n\n            currentDate = currentDateArray(config);\n\n            //compute day of the year from weeks and weekdays\n            if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n                dayOfYearFromWeekInfo(config);\n            }\n\n            //if the day of the year is set, figure out what it is\n            if (config._dayOfYear) {\n                yearToUse = dfl(config._a[YEAR], currentDate[YEAR]);\n\n                if (config._dayOfYear > daysInYear(yearToUse)) {\n                    config._pf._overflowDayOfYear = true;\n                }\n\n                date = makeUTCDate(yearToUse, 0, config._dayOfYear);\n                config._a[MONTH] = date.getUTCMonth();\n                config._a[DATE] = date.getUTCDate();\n            }\n\n            // Default to current date.\n            // * if no year, month, day of month are given, default to today\n            // * if day of month is given, default month and year\n            // * if month is given, default only year\n            // * if year is given, don\'t default anything\n            for (i = 0; i < 3 && config._a[i] == null; ++i) {\n                config._a[i] = input[i] = currentDate[i];\n            }\n\n            // Zero out whatever was not defaulted, including time\n            for (; i < 7; i++) {\n                config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n            }\n\n            config._d = (config._useUTC ? makeUTCDate : makeDate).apply(null, input);\n            // Apply timezone offset from input. The actual zone can be changed\n            // with parseZone.\n            if (config._tzm != null) {\n                config._d.setUTCMinutes(config._d.getUTCMinutes() + config._tzm);\n            }\n        }\n\n        function dateFromObject(config) {\n            var normalizedInput;\n\n            if (config._d) {\n                return;\n            }\n\n            normalizedInput = normalizeObjectUnits(config._i);\n            config._a = [\n                normalizedInput.year,\n                normalizedInput.month,\n                normalizedInput.day,\n                normalizedInput.hour,\n                normalizedInput.minute,\n                normalizedInput.second,\n                normalizedInput.millisecond\n            ];\n\n            dateFromConfig(config);\n        }\n\n        function currentDateArray(config) {\n            var now = new Date();\n            if (config._useUTC) {\n                return [\n                    now.getUTCFullYear(),\n                    now.getUTCMonth(),\n                    now.getUTCDate()\n                ];\n            } else {\n                return [now.getFullYear(), now.getMonth(), now.getDate()];\n            }\n        }\n\n        // date from string and format string\n        function makeDateFromStringAndFormat(config) {\n\n            if (config._f === moment.ISO_8601) {\n                parseISO(config);\n                return;\n            }\n\n            config._a = [];\n            config._pf.empty = true;\n\n            // This array is used to make a Date, either with `new Date` or `Date.UTC`\n            var lang = getLangDefinition(config._l),\n                string = \'\' + config._i,\n                i, parsedInput, tokens, token, skipped,\n                stringLength = string.length,\n                totalParsedInputLength = 0;\n\n            tokens = expandFormat(config._f, lang).match(formattingTokens) || [];\n\n            for (i = 0; i < tokens.length; i++) {\n                token = tokens[i];\n                parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n                if (parsedInput) {\n                    skipped = string.substr(0, string.indexOf(parsedInput));\n                    if (skipped.length > 0) {\n                        config._pf.unusedInput.push(skipped);\n                    }\n                    string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                    totalParsedInputLength += parsedInput.length;\n                }\n                // don\'t parse if it\'s not a known token\n                if (formatTokenFunctions[token]) {\n                    if (parsedInput) {\n                        config._pf.empty = false;\n                    }\n                    else {\n                        config._pf.unusedTokens.push(token);\n                    }\n                    addTimeToArrayFromToken(token, parsedInput, config);\n                }\n                else if (config._strict && !parsedInput) {\n                    config._pf.unusedTokens.push(token);\n                }\n            }\n\n            // add remaining unparsed input length to the string\n            config._pf.charsLeftOver = stringLength - totalParsedInputLength;\n            if (string.length > 0) {\n                config._pf.unusedInput.push(string);\n            }\n\n            // handle am pm\n            if (config._isPm && config._a[HOUR] < 12) {\n                config._a[HOUR] += 12;\n            }\n            // if is 12 am, change hours to 0\n            if (config._isPm === false && config._a[HOUR] === 12) {\n                config._a[HOUR] = 0;\n            }\n\n            dateFromConfig(config);\n            checkOverflow(config);\n        }\n\n        function unescapeFormat(s) {\n            return s.replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n                return p1 || p2 || p3 || p4;\n            });\n        }\n\n        // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n        function regexpEscape(s) {\n            return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \'\\\\$&\');\n        }\n\n        // date from string and array of format strings\n        function makeDateFromStringAndArray(config) {\n            var tempConfig,\n                bestMoment,\n\n                scoreToBeat,\n                i,\n                currentScore;\n\n            if (config._f.length === 0) {\n                config._pf.invalidFormat = true;\n                config._d = new Date(NaN);\n                return;\n            }\n\n            for (i = 0; i < config._f.length; i++) {\n                currentScore = 0;\n                tempConfig = extend({}, config);\n                tempConfig._pf = defaultParsingFlags();\n                tempConfig._f = config._f[i];\n                makeDateFromStringAndFormat(tempConfig);\n\n                if (!isValid(tempConfig)) {\n                    continue;\n                }\n\n                // if there is any input that was not parsed add a penalty for that format\n                currentScore += tempConfig._pf.charsLeftOver;\n\n                //or tokens\n                currentScore += tempConfig._pf.unusedTokens.length * 10;\n\n                tempConfig._pf.score = currentScore;\n\n                if (scoreToBeat == null || currentScore < scoreToBeat) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                }\n            }\n\n            extend(config, bestMoment || tempConfig);\n        }\n\n        // date from iso format\n        function parseISO(config) {\n            var i, l,\n                string = config._i,\n                match = isoRegex.exec(string);\n\n            if (match) {\n                config._pf.iso = true;\n                for (i = 0, l = isoDates.length; i < l; i++) {\n                    if (isoDates[i][1].exec(string)) {\n                        // match[5] should be \"T\" or undefined\n                        config._f = isoDates[i][0] + (match[6] || \" \");\n                        break;\n                    }\n                }\n                for (i = 0, l = isoTimes.length; i < l; i++) {\n                    if (isoTimes[i][1].exec(string)) {\n                        config._f += isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (string.match(parseTokenTimezone)) {\n                    config._f += \"Z\";\n                }\n                makeDateFromStringAndFormat(config);\n            } else {\n                config._isValid = false;\n            }\n        }\n\n        // date from iso format or fallback\n        function makeDateFromString(config) {\n            parseISO(config);\n            if (config._isValid === false) {\n                delete config._isValid;\n                moment.createFromInputFallback(config);\n            }\n        }\n\n        function makeDateFromInput(config) {\n            var input = config._i,\n                matched = aspNetJsonRegex.exec(input);\n\n            if (input === undefined) {\n                config._d = new Date();\n            } else if (matched) {\n                config._d = new Date(+matched[1]);\n            } else if (typeof input === \'string\') {\n                makeDateFromString(config);\n            } else if (isArray(input)) {\n                config._a = input.slice(0);\n                dateFromConfig(config);\n            } else if (isDate(input)) {\n                config._d = new Date(+input);\n            } else if (typeof(input) === \'object\') {\n                dateFromObject(config);\n            } else if (typeof(input) === \'number\') {\n                // from milliseconds\n                config._d = new Date(input);\n            } else {\n                moment.createFromInputFallback(config);\n            }\n        }\n\n        function makeDate(y, m, d, h, M, s, ms) {\n            //can\'t just apply() to create a date:\n            //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply\n            var date = new Date(y, m, d, h, M, s, ms);\n\n            //the date constructor doesn\'t accept years < 1970\n            if (y < 1970) {\n                date.setFullYear(y);\n            }\n            return date;\n        }\n\n        function makeUTCDate(y) {\n            var date = new Date(Date.UTC.apply(null, arguments));\n            if (y < 1970) {\n                date.setUTCFullYear(y);\n            }\n            return date;\n        }\n\n        function parseWeekday(input, language) {\n            if (typeof input === \'string\') {\n                if (!isNaN(input)) {\n                    input = parseInt(input, 10);\n                }\n                else {\n                    input = language.weekdaysParse(input);\n                    if (typeof input !== \'number\') {\n                        return null;\n                    }\n                }\n            }\n            return input;\n        }\n\n        /************************************\n            Relative Time\n        ************************************/\n\n\n        // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n        function substituteTimeAgo(string, number, withoutSuffix, isFuture, lang) {\n            return lang.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n        }\n\n        function relativeTime(milliseconds, withoutSuffix, lang) {\n            var seconds = round(Math.abs(milliseconds) / 1000),\n                minutes = round(seconds / 60),\n                hours = round(minutes / 60),\n                days = round(hours / 24),\n                years = round(days / 365),\n                args = seconds < relativeTimeThresholds.s  && [\'s\', seconds] ||\n                    minutes === 1 && [\'m\'] ||\n                    minutes < relativeTimeThresholds.m && [\'mm\', minutes] ||\n                    hours === 1 && [\'h\'] ||\n                    hours < relativeTimeThresholds.h && [\'hh\', hours] ||\n                    days === 1 && [\'d\'] ||\n                    days <= relativeTimeThresholds.dd && [\'dd\', days] ||\n                    days <= relativeTimeThresholds.dm && [\'M\'] ||\n                    days < relativeTimeThresholds.dy && [\'MM\', round(days / 30)] ||\n                    years === 1 && [\'y\'] || [\'yy\', years];\n            args[2] = withoutSuffix;\n            args[3] = milliseconds > 0;\n            args[4] = lang;\n            return substituteTimeAgo.apply({}, args);\n        }\n\n\n        /************************************\n            Week of Year\n        ************************************/\n\n\n        // firstDayOfWeek       0 = sun, 6 = sat\n        //                      the day of the week that starts the week\n        //                      (usually sunday or monday)\n        // firstDayOfWeekOfYear 0 = sun, 6 = sat\n        //                      the first week is the week that contains the first\n        //                      of this day of the week\n        //                      (eg. ISO weeks use thursday (4))\n        function weekOfYear(mom, firstDayOfWeek, firstDayOfWeekOfYear) {\n            var end = firstDayOfWeekOfYear - firstDayOfWeek,\n                daysToDayOfWeek = firstDayOfWeekOfYear - mom.day(),\n                adjustedMoment;\n\n\n            if (daysToDayOfWeek > end) {\n                daysToDayOfWeek -= 7;\n            }\n\n            if (daysToDayOfWeek < end - 7) {\n                daysToDayOfWeek += 7;\n            }\n\n            adjustedMoment = moment(mom).add(\'d\', daysToDayOfWeek);\n            return {\n                week: Math.ceil(adjustedMoment.dayOfYear() / 7),\n                year: adjustedMoment.year()\n            };\n        }\n\n        //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n        function dayOfYearFromWeeks(year, week, weekday, firstDayOfWeekOfYear, firstDayOfWeek) {\n            var d = makeUTCDate(year, 0, 1).getUTCDay(), daysToAdd, dayOfYear;\n\n            d = d === 0 ? 7 : d;\n            weekday = weekday != null ? weekday : firstDayOfWeek;\n            daysToAdd = firstDayOfWeek - d + (d > firstDayOfWeekOfYear ? 7 : 0) - (d < firstDayOfWeek ? 7 : 0);\n            dayOfYear = 7 * (week - 1) + (weekday - firstDayOfWeek) + daysToAdd + 1;\n\n            return {\n                year: dayOfYear > 0 ? year : year - 1,\n                dayOfYear: dayOfYear > 0 ?  dayOfYear : daysInYear(year - 1) + dayOfYear\n            };\n        }\n\n        /************************************\n            Top Level Functions\n        ************************************/\n\n        function makeMoment(config) {\n            var input = config._i,\n                format = config._f;\n\n            if (input === null || (format === undefined && input === \'\')) {\n                return moment.invalid({nullInput: true});\n            }\n\n            if (typeof input === \'string\') {\n                config._i = input = getLangDefinition().preparse(input);\n            }\n\n            if (moment.isMoment(input)) {\n                config = cloneMoment(input);\n\n                config._d = new Date(+input._d);\n            } else if (format) {\n                if (isArray(format)) {\n                    makeDateFromStringAndArray(config);\n                } else {\n                    makeDateFromStringAndFormat(config);\n                }\n            } else {\n                makeDateFromInput(config);\n            }\n\n            return new Moment(config);\n        }\n\n        moment = function (input, format, lang, strict) {\n            var c;\n\n            if (typeof(lang) === \"boolean\") {\n                strict = lang;\n                lang = undefined;\n            }\n            // object construction must be done this way.\n            // https://github.com/moment/moment/issues/1423\n            c = {};\n            c._isAMomentObject = true;\n            c._i = input;\n            c._f = format;\n            c._l = lang;\n            c._strict = strict;\n            c._isUTC = false;\n            c._pf = defaultParsingFlags();\n\n            return makeMoment(c);\n        };\n\n        moment.suppressDeprecationWarnings = false;\n\n        moment.createFromInputFallback = deprecate(\n                \"moment construction falls back to js Date. This is \" +\n                \"discouraged and will be removed in upcoming major \" +\n                \"release. Please refer to \" +\n                \"https://github.com/moment/moment/issues/1407 for more info.\",\n                function (config) {\n            config._d = new Date(config._i);\n        });\n\n        // Pick a moment m from moments so that m[fn](other) is true for all\n        // other. This relies on the function fn to be transitive.\n        //\n        // moments should either be an array of moment objects or an array, whose\n        // first element is an array of moment objects.\n        function pickBy(fn, moments) {\n            var res, i;\n            if (moments.length === 1 && isArray(moments[0])) {\n                moments = moments[0];\n            }\n            if (!moments.length) {\n                return moment();\n            }\n            res = moments[0];\n            for (i = 1; i < moments.length; ++i) {\n                if (moments[i][fn](res)) {\n                    res = moments[i];\n                }\n            }\n            return res;\n        }\n\n        moment.min = function () {\n            var args = [].slice.call(arguments, 0);\n\n            return pickBy(\'isBefore\', args);\n        };\n\n        moment.max = function () {\n            var args = [].slice.call(arguments, 0);\n\n            return pickBy(\'isAfter\', args);\n        };\n\n        // creating with utc\n        moment.utc = function (input, format, lang, strict) {\n            var c;\n\n            if (typeof(lang) === \"boolean\") {\n                strict = lang;\n                lang = undefined;\n            }\n            // object construction must be done this way.\n            // https://github.com/moment/moment/issues/1423\n            c = {};\n            c._isAMomentObject = true;\n            c._useUTC = true;\n            c._isUTC = true;\n            c._l = lang;\n            c._i = input;\n            c._f = format;\n            c._strict = strict;\n            c._pf = defaultParsingFlags();\n\n            return makeMoment(c).utc();\n        };\n\n        // creating with unix timestamp (in seconds)\n        moment.unix = function (input) {\n            return moment(input * 1000);\n        };\n\n        // duration\n        moment.duration = function (input, key) {\n            var duration = input,\n                // matching against regexp is expensive, do it on demand\n                match = null,\n                sign,\n                ret,\n                parseIso;\n\n            if (moment.isDuration(input)) {\n                duration = {\n                    ms: input._milliseconds,\n                    d: input._days,\n                    M: input._months\n                };\n            } else if (typeof input === \'number\') {\n                duration = {};\n                if (key) {\n                    duration[key] = input;\n                } else {\n                    duration.milliseconds = input;\n                }\n            } else if (!!(match = aspNetTimeSpanJsonRegex.exec(input))) {\n                sign = (match[1] === \"-\") ? -1 : 1;\n                duration = {\n                    y: 0,\n                    d: toInt(match[DATE]) * sign,\n                    h: toInt(match[HOUR]) * sign,\n                    m: toInt(match[MINUTE]) * sign,\n                    s: toInt(match[SECOND]) * sign,\n                    ms: toInt(match[MILLISECOND]) * sign\n                };\n            } else if (!!(match = isoDurationRegex.exec(input))) {\n                sign = (match[1] === \"-\") ? -1 : 1;\n                parseIso = function (inp) {\n                    // We\'d normally use ~~inp for this, but unfortunately it also\n                    // converts floats to ints.\n                    // inp may be undefined, so careful calling replace on it.\n                    var res = inp && parseFloat(inp.replace(\',\', \'.\'));\n                    // apply sign while we\'re at it\n                    return (isNaN(res) ? 0 : res) * sign;\n                };\n                duration = {\n                    y: parseIso(match[2]),\n                    M: parseIso(match[3]),\n                    d: parseIso(match[4]),\n                    h: parseIso(match[5]),\n                    m: parseIso(match[6]),\n                    s: parseIso(match[7]),\n                    w: parseIso(match[8])\n                };\n            }\n\n            ret = new Duration(duration);\n\n            if (moment.isDuration(input) && input.hasOwnProperty(\'_lang\')) {\n                ret._lang = input._lang;\n            }\n\n            return ret;\n        };\n\n        // version number\n        moment.version = VERSION;\n\n        // default format\n        moment.defaultFormat = isoFormat;\n\n        // constant that refers to the ISO standard\n        moment.ISO_8601 = function () {};\n\n        // Plugins that add properties should also add the key here (null value),\n        // so we can properly clone ourselves.\n        moment.momentProperties = momentProperties;\n\n        // This function will be called whenever a moment is mutated.\n        // It is intended to keep the offset in sync with the timezone.\n        moment.updateOffset = function () {};\n\n        // This function allows you to set a threshold for relative time strings\n        moment.relativeTimeThreshold = function(threshold, limit) {\n          if (relativeTimeThresholds[threshold] === undefined) {\n            return false;\n          }\n          relativeTimeThresholds[threshold] = limit;\n          return true;\n        };\n\n        // This function will load languages and then set the global language.  If\n        // no arguments are passed in, it will simply return the current global\n        // language key.\n        moment.lang = function (key, values) {\n            var r;\n            if (!key) {\n                return moment.fn._lang._abbr;\n            }\n            if (values) {\n                loadLang(normalizeLanguage(key), values);\n            } else if (values === null) {\n                unloadLang(key);\n                key = \'en\';\n            } else if (!languages[key]) {\n                getLangDefinition(key);\n            }\n            r = moment.duration.fn._lang = moment.fn._lang = getLangDefinition(key);\n            return r._abbr;\n        };\n\n        // returns language data\n        moment.langData = function (key) {\n            if (key && key._lang && key._lang._abbr) {\n                key = key._lang._abbr;\n            }\n            return getLangDefinition(key);\n        };\n\n        // compare moment object\n        moment.isMoment = function (obj) {\n            return obj instanceof Moment ||\n                (obj != null &&  obj.hasOwnProperty(\'_isAMomentObject\'));\n        };\n\n        // for typechecking Duration objects\n        moment.isDuration = function (obj) {\n            return obj instanceof Duration;\n        };\n\n        for (i = lists.length - 1; i >= 0; --i) {\n            makeList(lists[i]);\n        }\n\n        moment.normalizeUnits = function (units) {\n            return normalizeUnits(units);\n        };\n\n        moment.invalid = function (flags) {\n            var m = moment.utc(NaN);\n            if (flags != null) {\n                extend(m._pf, flags);\n            }\n            else {\n                m._pf.userInvalidated = true;\n            }\n\n            return m;\n        };\n\n        moment.parseZone = function () {\n            return moment.apply(null, arguments).parseZone();\n        };\n\n        moment.parseTwoDigitYear = function (input) {\n            return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n        };\n\n        /************************************\n            Moment Prototype\n        ************************************/\n\n\n        extend(moment.fn = Moment.prototype, {\n\n            clone : function () {\n                return moment(this);\n            },\n\n            valueOf : function () {\n                return +this._d + ((this._offset || 0) * 60000);\n            },\n\n            unix : function () {\n                return Math.floor(+this / 1000);\n            },\n\n            toString : function () {\n                return this.clone().lang(\'en\').format(\"ddd MMM DD YYYY HH:mm:ss [GMT]ZZ\");\n            },\n\n            toDate : function () {\n                return this._offset ? new Date(+this) : this._d;\n            },\n\n            toISOString : function () {\n                var m = moment(this).utc();\n                if (0 < m.year() && m.year() <= 9999) {\n                    return formatMoment(m, \'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]\');\n                } else {\n                    return formatMoment(m, \'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]\');\n                }\n            },\n\n            toArray : function () {\n                var m = this;\n                return [\n                    m.year(),\n                    m.month(),\n                    m.date(),\n                    m.hours(),\n                    m.minutes(),\n                    m.seconds(),\n                    m.milliseconds()\n                ];\n            },\n\n            isValid : function () {\n                return isValid(this);\n            },\n\n            isDSTShifted : function () {\n\n                if (this._a) {\n                    return this.isValid() && compareArrays(this._a, (this._isUTC ? moment.utc(this._a) : moment(this._a)).toArray()) > 0;\n                }\n\n                return false;\n            },\n\n            parsingFlags : function () {\n                return extend({}, this._pf);\n            },\n\n            invalidAt: function () {\n                return this._pf.overflow;\n            },\n\n            utc : function () {\n                return this.zone(0);\n            },\n\n            local : function () {\n                this.zone(0);\n                this._isUTC = false;\n                return this;\n            },\n\n            format : function (inputString) {\n                var output = formatMoment(this, inputString || moment.defaultFormat);\n                return this.lang().postformat(output);\n            },\n\n            add : function (input, val) {\n                var dur;\n                // switch args to support add(\'s\', 1) and add(1, \'s\')\n                if (typeof input === \'string\' && typeof val === \'string\') {\n                    dur = moment.duration(isNaN(+val) ? +input : +val, isNaN(+val) ? val : input);\n                } else if (typeof input === \'string\') {\n                    dur = moment.duration(+val, input);\n                } else {\n                    dur = moment.duration(input, val);\n                }\n                addOrSubtractDurationFromMoment(this, dur, 1);\n                return this;\n            },\n\n            subtract : function (input, val) {\n                var dur;\n                // switch args to support subtract(\'s\', 1) and subtract(1, \'s\')\n                if (typeof input === \'string\' && typeof val === \'string\') {\n                    dur = moment.duration(isNaN(+val) ? +input : +val, isNaN(+val) ? val : input);\n                } else if (typeof input === \'string\') {\n                    dur = moment.duration(+val, input);\n                } else {\n                    dur = moment.duration(input, val);\n                }\n                addOrSubtractDurationFromMoment(this, dur, -1);\n                return this;\n            },\n\n            diff : function (input, units, asFloat) {\n                var that = makeAs(input, this),\n                    zoneDiff = (this.zone() - that.zone()) * 6e4,\n                    diff, output;\n\n                units = normalizeUnits(units);\n\n                if (units === \'year\' || units === \'month\') {\n                    // average number of days in the months in the given dates\n                    diff = (this.daysInMonth() + that.daysInMonth()) * 432e5; // 24 * 60 * 60 * 1000 / 2\n                    // difference in months\n                    output = ((this.year() - that.year()) * 12) + (this.month() - that.month());\n                    // adjust by taking difference in days, average number of days\n                    // and dst in the given months.\n                    output += ((this - moment(this).startOf(\'month\')) -\n                            (that - moment(that).startOf(\'month\'))) / diff;\n                    // same as above but with zones, to negate all dst\n                    output -= ((this.zone() - moment(this).startOf(\'month\').zone()) -\n                            (that.zone() - moment(that).startOf(\'month\').zone())) * 6e4 / diff;\n                    if (units === \'year\') {\n                        output = output / 12;\n                    }\n                } else {\n                    diff = (this - that);\n                    output = units === \'second\' ? diff / 1e3 : // 1000\n                        units === \'minute\' ? diff / 6e4 : // 1000 * 60\n                        units === \'hour\' ? diff / 36e5 : // 1000 * 60 * 60\n                        units === \'day\' ? (diff - zoneDiff) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n                        units === \'week\' ? (diff - zoneDiff) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n                        diff;\n                }\n                return asFloat ? output : absRound(output);\n            },\n\n            from : function (time, withoutSuffix) {\n                return moment.duration(this.diff(time)).lang(this.lang()._abbr).humanize(!withoutSuffix);\n            },\n\n            fromNow : function (withoutSuffix) {\n                return this.from(moment(), withoutSuffix);\n            },\n\n            calendar : function (time) {\n                // We want to compare the start of today, vs this.\n                // Getting start-of-today depends on whether we\'re zone\'d or not.\n                var now = time || moment(),\n                    sod = makeAs(now, this).startOf(\'day\'),\n                    diff = this.diff(sod, \'days\', true),\n                    format = diff < -6 ? \'sameElse\' :\n                        diff < -1 ? \'lastWeek\' :\n                        diff < 0 ? \'lastDay\' :\n                        diff < 1 ? \'sameDay\' :\n                        diff < 2 ? \'nextDay\' :\n                        diff < 7 ? \'nextWeek\' : \'sameElse\';\n                return this.format(this.lang().calendar(format, this));\n            },\n\n            isLeapYear : function () {\n                return isLeapYear(this.year());\n            },\n\n            isDST : function () {\n                return (this.zone() < this.clone().month(0).zone() ||\n                    this.zone() < this.clone().month(5).zone());\n            },\n\n            day : function (input) {\n                var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n                if (input != null) {\n                    input = parseWeekday(input, this.lang());\n                    return this.add({ d : input - day });\n                } else {\n                    return day;\n                }\n            },\n\n            month : makeAccessor(\'Month\', true),\n\n            startOf: function (units) {\n                units = normalizeUnits(units);\n                // the following switch intentionally omits break keywords\n                // to utilize falling through the cases.\n                switch (units) {\n                case \'year\':\n                    this.month(0);\n                    /* falls through */\n                case \'quarter\':\n                case \'month\':\n                    this.date(1);\n                    /* falls through */\n                case \'week\':\n                case \'isoWeek\':\n                case \'day\':\n                    this.hours(0);\n                    /* falls through */\n                case \'hour\':\n                    this.minutes(0);\n                    /* falls through */\n                case \'minute\':\n                    this.seconds(0);\n                    /* falls through */\n                case \'second\':\n                    this.milliseconds(0);\n                    /* falls through */\n                }\n\n                // weeks are a special case\n                if (units === \'week\') {\n                    this.weekday(0);\n                } else if (units === \'isoWeek\') {\n                    this.isoWeekday(1);\n                }\n\n                // quarters are also special\n                if (units === \'quarter\') {\n                    this.month(Math.floor(this.month() / 3) * 3);\n                }\n\n                return this;\n            },\n\n            endOf: function (units) {\n                units = normalizeUnits(units);\n                return this.startOf(units).add((units === \'isoWeek\' ? \'week\' : units), 1).subtract(\'ms\', 1);\n            },\n\n            isAfter: function (input, units) {\n                units = typeof units !== \'undefined\' ? units : \'millisecond\';\n                return +this.clone().startOf(units) > +moment(input).startOf(units);\n            },\n\n            isBefore: function (input, units) {\n                units = typeof units !== \'undefined\' ? units : \'millisecond\';\n                return +this.clone().startOf(units) < +moment(input).startOf(units);\n            },\n\n            isSame: function (input, units) {\n                units = units || \'ms\';\n                return +this.clone().startOf(units) === +makeAs(input, this).startOf(units);\n            },\n\n            min: deprecate(\n                     \"moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548\",\n                     function (other) {\n                         other = moment.apply(null, arguments);\n                         return other < this ? this : other;\n                     }\n             ),\n\n            max: deprecate(\n                    \"moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548\",\n                    function (other) {\n                        other = moment.apply(null, arguments);\n                        return other > this ? this : other;\n                    }\n            ),\n\n            // keepTime = true means only change the timezone, without affecting\n            // the local hour. So 5:31:26 +0300 --[zone(2, true)]--> 5:31:26 +0200\n            // It is possible that 5:31:26 doesn\'t exist int zone +0200, so we\n            // adjust the time as needed, to be valid.\n            //\n            // Keeping the time actually adds/subtracts (one hour)\n            // from the actual represented time. That is why we call updateOffset\n            // a second time. In case it wants us to change the offset again\n            // _changeInProgress == true case, then we have to adjust, because\n            // there is no such time in the given timezone.\n            zone : function (input, keepTime) {\n                var offset = this._offset || 0;\n                if (input != null) {\n                    if (typeof input === \"string\") {\n                        input = timezoneMinutesFromString(input);\n                    }\n                    if (Math.abs(input) < 16) {\n                        input = input * 60;\n                    }\n                    this._offset = input;\n                    this._isUTC = true;\n                    if (offset !== input) {\n                        if (!keepTime || this._changeInProgress) {\n                            addOrSubtractDurationFromMoment(this,\n                                    moment.duration(offset - input, \'m\'), 1, false);\n                        } else if (!this._changeInProgress) {\n                            this._changeInProgress = true;\n                            moment.updateOffset(this, true);\n                            this._changeInProgress = null;\n                        }\n                    }\n                } else {\n                    return this._isUTC ? offset : this._d.getTimezoneOffset();\n                }\n                return this;\n            },\n\n            zoneAbbr : function () {\n                return this._isUTC ? \"UTC\" : \"\";\n            },\n\n            zoneName : function () {\n                return this._isUTC ? \"Coordinated Universal Time\" : \"\";\n            },\n\n            parseZone : function () {\n                if (this._tzm) {\n                    this.zone(this._tzm);\n                } else if (typeof this._i === \'string\') {\n                    this.zone(this._i);\n                }\n                return this;\n            },\n\n            hasAlignedHourOffset : function (input) {\n                if (!input) {\n                    input = 0;\n                }\n                else {\n                    input = moment(input).zone();\n                }\n\n                return (this.zone() - input) % 60 === 0;\n            },\n\n            daysInMonth : function () {\n                return daysInMonth(this.year(), this.month());\n            },\n\n            dayOfYear : function (input) {\n                var dayOfYear = round((moment(this).startOf(\'day\') - moment(this).startOf(\'year\')) / 864e5) + 1;\n                return input == null ? dayOfYear : this.add(\"d\", (input - dayOfYear));\n            },\n\n            quarter : function (input) {\n                return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n            },\n\n            weekYear : function (input) {\n                var year = weekOfYear(this, this.lang()._week.dow, this.lang()._week.doy).year;\n                return input == null ? year : this.add(\"y\", (input - year));\n            },\n\n            isoWeekYear : function (input) {\n                var year = weekOfYear(this, 1, 4).year;\n                return input == null ? year : this.add(\"y\", (input - year));\n            },\n\n            week : function (input) {\n                var week = this.lang().week(this);\n                return input == null ? week : this.add(\"d\", (input - week) * 7);\n            },\n\n            isoWeek : function (input) {\n                var week = weekOfYear(this, 1, 4).week;\n                return input == null ? week : this.add(\"d\", (input - week) * 7);\n            },\n\n            weekday : function (input) {\n                var weekday = (this.day() + 7 - this.lang()._week.dow) % 7;\n                return input == null ? weekday : this.add(\"d\", input - weekday);\n            },\n\n            isoWeekday : function (input) {\n                // behaves the same as moment#day except\n                // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n                // as a setter, sunday should belong to the previous week.\n                return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);\n            },\n\n            isoWeeksInYear : function () {\n                return weeksInYear(this.year(), 1, 4);\n            },\n\n            weeksInYear : function () {\n                var weekInfo = this._lang._week;\n                return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n            },\n\n            get : function (units) {\n                units = normalizeUnits(units);\n                return this[units]();\n            },\n\n            set : function (units, value) {\n                units = normalizeUnits(units);\n                if (typeof this[units] === \'function\') {\n                    this[units](value);\n                }\n                return this;\n            },\n\n            // If passed a language key, it will set the language for this\n            // instance.  Otherwise, it will return the language configuration\n            // variables for this instance.\n            lang : function (key) {\n                if (key === undefined) {\n                    return this._lang;\n                } else {\n                    this._lang = getLangDefinition(key);\n                    return this;\n                }\n            }\n        });\n\n        function rawMonthSetter(mom, value) {\n            var dayOfMonth;\n\n            // TODO: Move this out of here!\n            if (typeof value === \'string\') {\n                value = mom.lang().monthsParse(value);\n                // TODO: Another silent failure?\n                if (typeof value !== \'number\') {\n                    return mom;\n                }\n            }\n\n            dayOfMonth = Math.min(mom.date(),\n                    daysInMonth(mom.year(), value));\n            mom._d[\'set\' + (mom._isUTC ? \'UTC\' : \'\') + \'Month\'](value, dayOfMonth);\n            return mom;\n        }\n\n        function rawGetter(mom, unit) {\n            return mom._d[\'get\' + (mom._isUTC ? \'UTC\' : \'\') + unit]();\n        }\n\n        function rawSetter(mom, unit, value) {\n            if (unit === \'Month\') {\n                return rawMonthSetter(mom, value);\n            } else {\n                return mom._d[\'set\' + (mom._isUTC ? \'UTC\' : \'\') + unit](value);\n            }\n        }\n\n        function makeAccessor(unit, keepTime) {\n            return function (value) {\n                if (value != null) {\n                    rawSetter(this, unit, value);\n                    moment.updateOffset(this, keepTime);\n                    return this;\n                } else {\n                    return rawGetter(this, unit);\n                }\n            };\n        }\n\n        moment.fn.millisecond = moment.fn.milliseconds = makeAccessor(\'Milliseconds\', false);\n        moment.fn.second = moment.fn.seconds = makeAccessor(\'Seconds\', false);\n        moment.fn.minute = moment.fn.minutes = makeAccessor(\'Minutes\', false);\n        // Setting the hour should keep the time, because the user explicitly\n        // specified which hour he wants. So trying to maintain the same hour (in\n        // a new timezone) makes sense. Adding/subtracting hours does not follow\n        // this rule.\n        moment.fn.hour = moment.fn.hours = makeAccessor(\'Hours\', true);\n        // moment.fn.month is defined separately\n        moment.fn.date = makeAccessor(\'Date\', true);\n        moment.fn.dates = deprecate(\"dates accessor is deprecated. Use date instead.\", makeAccessor(\'Date\', true));\n        moment.fn.year = makeAccessor(\'FullYear\', true);\n        moment.fn.years = deprecate(\"years accessor is deprecated. Use year instead.\", makeAccessor(\'FullYear\', true));\n\n        // add plural methods\n        moment.fn.days = moment.fn.day;\n        moment.fn.months = moment.fn.month;\n        moment.fn.weeks = moment.fn.week;\n        moment.fn.isoWeeks = moment.fn.isoWeek;\n        moment.fn.quarters = moment.fn.quarter;\n\n        // add aliased format methods\n        moment.fn.toJSON = moment.fn.toISOString;\n\n        /************************************\n            Duration Prototype\n        ************************************/\n\n\n        extend(moment.duration.fn = Duration.prototype, {\n\n            _bubble : function () {\n                var milliseconds = this._milliseconds,\n                    days = this._days,\n                    months = this._months,\n                    data = this._data,\n                    seconds, minutes, hours, years;\n\n                // The following code bubbles up values, see the tests for\n                // examples of what that means.\n                data.milliseconds = milliseconds % 1000;\n\n                seconds = absRound(milliseconds / 1000);\n                data.seconds = seconds % 60;\n\n                minutes = absRound(seconds / 60);\n                data.minutes = minutes % 60;\n\n                hours = absRound(minutes / 60);\n                data.hours = hours % 24;\n\n                days += absRound(hours / 24);\n                data.days = days % 30;\n\n                months += absRound(days / 30);\n                data.months = months % 12;\n\n                years = absRound(months / 12);\n                data.years = years;\n            },\n\n            weeks : function () {\n                return absRound(this.days() / 7);\n            },\n\n            valueOf : function () {\n                return this._milliseconds +\n                  this._days * 864e5 +\n                  (this._months % 12) * 2592e6 +\n                  toInt(this._months / 12) * 31536e6;\n            },\n\n            humanize : function (withSuffix) {\n                var difference = +this,\n                    output = relativeTime(difference, !withSuffix, this.lang());\n\n                if (withSuffix) {\n                    output = this.lang().pastFuture(difference, output);\n                }\n\n                return this.lang().postformat(output);\n            },\n\n            add : function (input, val) {\n                // supports only 2.0-style add(1, \'s\') or add(moment)\n                var dur = moment.duration(input, val);\n\n                this._milliseconds += dur._milliseconds;\n                this._days += dur._days;\n                this._months += dur._months;\n\n                this._bubble();\n\n                return this;\n            },\n\n            subtract : function (input, val) {\n                var dur = moment.duration(input, val);\n\n                this._milliseconds -= dur._milliseconds;\n                this._days -= dur._days;\n                this._months -= dur._months;\n\n                this._bubble();\n\n                return this;\n            },\n\n            get : function (units) {\n                units = normalizeUnits(units);\n                return this[units.toLowerCase() + \'s\']();\n            },\n\n            as : function (units) {\n                units = normalizeUnits(units);\n                return this[\'as\' + units.charAt(0).toUpperCase() + units.slice(1) + \'s\']();\n            },\n\n            lang : moment.fn.lang,\n\n            toIsoString : function () {\n                // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n                var years = Math.abs(this.years()),\n                    months = Math.abs(this.months()),\n                    days = Math.abs(this.days()),\n                    hours = Math.abs(this.hours()),\n                    minutes = Math.abs(this.minutes()),\n                    seconds = Math.abs(this.seconds() + this.milliseconds() / 1000);\n\n                if (!this.asSeconds()) {\n                    // this is the same as C#\'s (Noda) and python (isodate)...\n                    // but not other JS (goog.date)\n                    return \'P0D\';\n                }\n\n                return (this.asSeconds() < 0 ? \'-\' : \'\') +\n                    \'P\' +\n                    (years ? years + \'Y\' : \'\') +\n                    (months ? months + \'M\' : \'\') +\n                    (days ? days + \'D\' : \'\') +\n                    ((hours || minutes || seconds) ? \'T\' : \'\') +\n                    (hours ? hours + \'H\' : \'\') +\n                    (minutes ? minutes + \'M\' : \'\') +\n                    (seconds ? seconds + \'S\' : \'\');\n            }\n        });\n\n        function makeDurationGetter(name) {\n            moment.duration.fn[name] = function () {\n                return this._data[name];\n            };\n        }\n\n        function makeDurationAsGetter(name, factor) {\n            moment.duration.fn[\'as\' + name] = function () {\n                return +this / factor;\n            };\n        }\n\n        for (i in unitMillisecondFactors) {\n            if (unitMillisecondFactors.hasOwnProperty(i)) {\n                makeDurationAsGetter(i, unitMillisecondFactors[i]);\n                makeDurationGetter(i.toLowerCase());\n            }\n        }\n\n        makeDurationAsGetter(\'Weeks\', 6048e5);\n        moment.duration.fn.asMonths = function () {\n            return (+this - this.years() * 31536e6) / 2592e6 + this.years() * 12;\n        };\n\n\n        /************************************\n            Default Lang\n        ************************************/\n\n\n        // Set default language, other languages will inherit from English.\n        moment.lang(\'en\', {\n            ordinal : function (number) {\n                var b = number % 10,\n                    output = (toInt(number % 100 / 10) === 1) ? \'th\' :\n                    (b === 1) ? \'st\' :\n                    (b === 2) ? \'nd\' :\n                    (b === 3) ? \'rd\' : \'th\';\n                return number + output;\n            }\n        });\n\n        /* EMBED_LANGUAGES */\n\n        /************************************\n            Exposing Moment\n        ************************************/\n\n        function makeGlobal(shouldDeprecate) {\n            /*global ender:false */\n            if (typeof ender !== \'undefined\') {\n                return;\n            }\n            oldGlobalMoment = globalScope.moment;\n            if (shouldDeprecate) {\n                globalScope.moment = deprecate(\n                        \"Accessing Moment through the global scope is \" +\n                        \"deprecated, and will be removed in an upcoming \" +\n                        \"release.\",\n                        moment);\n            } else {\n                globalScope.moment = moment;\n            }\n        }\n\n        // CommonJS module is defined\n        if (hasModule) {\n            module.exports = moment;\n        } else if (typeof define === \"function\" && define.amd) {\n            define(\"moment\", function (require, exports, module) {\n                if (module.config && module.config() && module.config().noGlobal === true) {\n                    // release the global variable\n                    globalScope.moment = oldGlobalMoment;\n                }\n\n                return moment;\n            });\n            makeGlobal(true);\n        } else {\n            makeGlobal();\n        }\n    }).call(this);\n  });//# sourceURL=vendor/moment/moment.js");

;eval("define(\"mikomos/controllers/search/index\", \n  [\"ember\",\"vendor/underscore/underscore\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var _ = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ArrayController.extend({\n    	offset: 0,\n    	searchTerm: \'\',\n    	selectedCountry: \'\',\n    	selectedState: \'\',\n    	neighborhood: \'\',\n    	filtered: function() {\n    		this.set(\'offset\', 0);\n    		var model = this.get(\'model\');\n    		var country = this.get(\'selectedCountry\');\n    		var searchTerm = this.get(\'searchTerm\');\n    		var state = this.get(\'selectedState\');\n    		var neighborhood = this.get(\'neighborhood\');\n    		var category = this.get(\'selectedCategory\');\n\n    		var filtered = model;\n    		if(searchTerm.length > 2) {\n    			var regex = new RegExp(searchTerm, \'i\');\n    			filtered = filtered.filter(function(item) {\n    				return item.title.match(regex);\n    			});\n    		}\n    		if(country) {\n    			filtered = filtered.filterBy(\'country\', country);\n    		}\n    		if(state) {\n    			filtered = filtered.filterBy(\'state\', state);\n    		}\n    		if(neighborhood) {\n    			filtered = filtered.filterBy(\'neighborhood\', neighborhood);\n    		}\n    		if(category) {\n    			filtered = filtered.filter(function(item) {\n    				return _.contains(item.categories, category);\n    			});\n    		}\n    		return filtered;\n    	}.property(\'selectedCountry\', \'selectedState\', \'neighborhood\', \'selectedCategory\', \'searchTerm\'),\n    	categories: function() {\n    		var categories = [];\n    		var model = this.get(\'model\');\n    		model.forEach(function(place) {\n    			place.categories.forEach(function(category) {\n    				if(!_.contains(categories, category)) {\n    					categories.push(category);\n    				}\n    			});\n    		});\n    //		console.log(categories);\n    		return categories;\n    	}.property(\'selectedCategory\'),\n    	countries: function() {\n    		var countries = [];\n    		var model = this.get(\'model\');\n    		\n    		model.forEach(function(place) {\n    			if(!_.contains(countries, place.country) && place.country) {\n    				countries.push(place.country);\n    			}\n    		});\n    		countries.push(\'\');\n    		return countries.sort();\n    	}.property(),\n    	states: function() {\n    		this.setProperties({selectedState: null, neighborhood: null});\n    		var states = [];\n    		var model = this.get(\'model\');\n    		var country = this.get(\'selectedCountry\');\n    		model.forEach(function(place) {\n    			if(place.country === country) {\n    				if(!_.contains(states, place.state) && place.state) {\n    					states.push(place.state);\n    				}\n    			}\n    		});\n    		states.push(\'\');\n    		return states.sort();\n    	}.property(\'selectedCountry\'),\n    	neighborhoods: function() {\n    		this.set(\'neighborhood\', null);\n    		var neighborhoods = [];\n    		var model = this.get(\'model\');\n    		var state = this.get(\'selectedState\');\n    //		var country = this.get(\'selectedCountry\');\n    		model.forEach(function(place) {\n    			if(place.state === state) {\n    				if(!_.contains(neighborhoods, place.neighborhood) && place.neighborhood) {\n    					neighborhoods.push(place.neighborhood);\n    				}\n    			}\n    		});\n    		neighborhoods.push(\'\');\n    		return neighborhoods.sort();\n    	}.property(\'selectedState\', \'selectedCountry\'),\n    	actions: {\n    		resetAll: function() {\n    			this.setProperties({\n    				searchTerm: \'\',\n    				selectedCountry: null,\n    				selectedState: null,\n    				selectedNeighborhood: null,\n    				selectedCategory: null\n    			});\n    		},\n    		clearTerm: function() {\n    			this.set(\'searchTerm\', \'\');\n    		},\n    		clearCategory: function() {\n    			this.set(\'selectedCategory\', null);\n    		}\n    	}\n    });\n  });//# sourceURL=mikomos/controllers/search/index.js");

;eval("define(\"vendor/underscore/underscore\", \n  [],\n  function() {\n    \"use strict\";\n    //     Underscore.js 1.6.0\n    //     http://underscorejs.org\n    //     (c) 2009-2014 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n    //     Underscore may be freely distributed under the MIT license.\n\n    (function() {\n\n      // Baseline setup\n      // --------------\n\n      // Establish the root object, `window` in the browser, or `exports` on the server.\n      var root = this;\n\n      // Save the previous value of the `_` variable.\n      var previousUnderscore = root._;\n\n      // Establish the object that gets returned to break out of a loop iteration.\n      var breaker = {};\n\n      // Save bytes in the minified (but not gzipped) version:\n      var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n      // Create quick reference variables for speed access to core prototypes.\n      var\n        push             = ArrayProto.push,\n        slice            = ArrayProto.slice,\n        concat           = ArrayProto.concat,\n        toString         = ObjProto.toString,\n        hasOwnProperty   = ObjProto.hasOwnProperty;\n\n      // All **ECMAScript 5** native function implementations that we hope to use\n      // are declared here.\n      var\n        nativeForEach      = ArrayProto.forEach,\n        nativeMap          = ArrayProto.map,\n        nativeReduce       = ArrayProto.reduce,\n        nativeReduceRight  = ArrayProto.reduceRight,\n        nativeFilter       = ArrayProto.filter,\n        nativeEvery        = ArrayProto.every,\n        nativeSome         = ArrayProto.some,\n        nativeIndexOf      = ArrayProto.indexOf,\n        nativeLastIndexOf  = ArrayProto.lastIndexOf,\n        nativeIsArray      = Array.isArray,\n        nativeKeys         = Object.keys,\n        nativeBind         = FuncProto.bind;\n\n      // Create a safe reference to the Underscore object for use below.\n      var _ = function(obj) {\n        if (obj instanceof _) return obj;\n        if (!(this instanceof _)) return new _(obj);\n        this._wrapped = obj;\n      };\n\n      // Export the Underscore object for **Node.js**, with\n      // backwards-compatibility for the old `require()` API. If we\'re in\n      // the browser, add `_` as a global object via a string identifier,\n      // for Closure Compiler \"advanced\" mode.\n      if (typeof exports !== \'undefined\') {\n        if (typeof module !== \'undefined\' && module.exports) {\n          exports = module.exports = _;\n        }\n        exports._ = _;\n      } else {\n        root._ = _;\n      }\n\n      // Current version.\n      _.VERSION = \'1.6.0\';\n\n      // Collection Functions\n      // --------------------\n\n      // The cornerstone, an `each` implementation, aka `forEach`.\n      // Handles objects with the built-in `forEach`, arrays, and raw objects.\n      // Delegates to **ECMAScript 5**\'s native `forEach` if available.\n      var each = _.each = _.forEach = function(obj, iterator, context) {\n        if (obj == null) return obj;\n        if (nativeForEach && obj.forEach === nativeForEach) {\n          obj.forEach(iterator, context);\n        } else if (obj.length === +obj.length) {\n          for (var i = 0, length = obj.length; i < length; i++) {\n            if (iterator.call(context, obj[i], i, obj) === breaker) return;\n          }\n        } else {\n          var keys = _.keys(obj);\n          for (var i = 0, length = keys.length; i < length; i++) {\n            if (iterator.call(context, obj[keys[i]], keys[i], obj) === breaker) return;\n          }\n        }\n        return obj;\n      };\n\n      // Return the results of applying the iterator to each element.\n      // Delegates to **ECMAScript 5**\'s native `map` if available.\n      _.map = _.collect = function(obj, iterator, context) {\n        var results = [];\n        if (obj == null) return results;\n        if (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);\n        each(obj, function(value, index, list) {\n          results.push(iterator.call(context, value, index, list));\n        });\n        return results;\n      };\n\n      var reduceError = \'Reduce of empty array with no initial value\';\n\n      // **Reduce** builds up a single result from a list of values, aka `inject`,\n      // or `foldl`. Delegates to **ECMAScript 5**\'s native `reduce` if available.\n      _.reduce = _.foldl = _.inject = function(obj, iterator, memo, context) {\n        var initial = arguments.length > 2;\n        if (obj == null) obj = [];\n        if (nativeReduce && obj.reduce === nativeReduce) {\n          if (context) iterator = _.bind(iterator, context);\n          return initial ? obj.reduce(iterator, memo) : obj.reduce(iterator);\n        }\n        each(obj, function(value, index, list) {\n          if (!initial) {\n            memo = value;\n            initial = true;\n          } else {\n            memo = iterator.call(context, memo, value, index, list);\n          }\n        });\n        if (!initial) throw new TypeError(reduceError);\n        return memo;\n      };\n\n      // The right-associative version of reduce, also known as `foldr`.\n      // Delegates to **ECMAScript 5**\'s native `reduceRight` if available.\n      _.reduceRight = _.foldr = function(obj, iterator, memo, context) {\n        var initial = arguments.length > 2;\n        if (obj == null) obj = [];\n        if (nativeReduceRight && obj.reduceRight === nativeReduceRight) {\n          if (context) iterator = _.bind(iterator, context);\n          return initial ? obj.reduceRight(iterator, memo) : obj.reduceRight(iterator);\n        }\n        var length = obj.length;\n        if (length !== +length) {\n          var keys = _.keys(obj);\n          length = keys.length;\n        }\n        each(obj, function(value, index, list) {\n          index = keys ? keys[--length] : --length;\n          if (!initial) {\n            memo = obj[index];\n            initial = true;\n          } else {\n            memo = iterator.call(context, memo, obj[index], index, list);\n          }\n        });\n        if (!initial) throw new TypeError(reduceError);\n        return memo;\n      };\n\n      // Return the first value which passes a truth test. Aliased as `detect`.\n      _.find = _.detect = function(obj, predicate, context) {\n        var result;\n        any(obj, function(value, index, list) {\n          if (predicate.call(context, value, index, list)) {\n            result = value;\n            return true;\n          }\n        });\n        return result;\n      };\n\n      // Return all the elements that pass a truth test.\n      // Delegates to **ECMAScript 5**\'s native `filter` if available.\n      // Aliased as `select`.\n      _.filter = _.select = function(obj, predicate, context) {\n        var results = [];\n        if (obj == null) return results;\n        if (nativeFilter && obj.filter === nativeFilter) return obj.filter(predicate, context);\n        each(obj, function(value, index, list) {\n          if (predicate.call(context, value, index, list)) results.push(value);\n        });\n        return results;\n      };\n\n      // Return all the elements for which a truth test fails.\n      _.reject = function(obj, predicate, context) {\n        return _.filter(obj, function(value, index, list) {\n          return !predicate.call(context, value, index, list);\n        }, context);\n      };\n\n      // Determine whether all of the elements match a truth test.\n      // Delegates to **ECMAScript 5**\'s native `every` if available.\n      // Aliased as `all`.\n      _.every = _.all = function(obj, predicate, context) {\n        predicate || (predicate = _.identity);\n        var result = true;\n        if (obj == null) return result;\n        if (nativeEvery && obj.every === nativeEvery) return obj.every(predicate, context);\n        each(obj, function(value, index, list) {\n          if (!(result = result && predicate.call(context, value, index, list))) return breaker;\n        });\n        return !!result;\n      };\n\n      // Determine if at least one element in the object matches a truth test.\n      // Delegates to **ECMAScript 5**\'s native `some` if available.\n      // Aliased as `any`.\n      var any = _.some = _.any = function(obj, predicate, context) {\n        predicate || (predicate = _.identity);\n        var result = false;\n        if (obj == null) return result;\n        if (nativeSome && obj.some === nativeSome) return obj.some(predicate, context);\n        each(obj, function(value, index, list) {\n          if (result || (result = predicate.call(context, value, index, list))) return breaker;\n        });\n        return !!result;\n      };\n\n      // Determine if the array or object contains a given value (using `===`).\n      // Aliased as `include`.\n      _.contains = _.include = function(obj, target) {\n        if (obj == null) return false;\n        if (nativeIndexOf && obj.indexOf === nativeIndexOf) return obj.indexOf(target) != -1;\n        return any(obj, function(value) {\n          return value === target;\n        });\n      };\n\n      // Invoke a method (with arguments) on every item in a collection.\n      _.invoke = function(obj, method) {\n        var args = slice.call(arguments, 2);\n        var isFunc = _.isFunction(method);\n        return _.map(obj, function(value) {\n          return (isFunc ? method : value[method]).apply(value, args);\n        });\n      };\n\n      // Convenience version of a common use case of `map`: fetching a property.\n      _.pluck = function(obj, key) {\n        return _.map(obj, _.property(key));\n      };\n\n      // Convenience version of a common use case of `filter`: selecting only objects\n      // containing specific `key:value` pairs.\n      _.where = function(obj, attrs) {\n        return _.filter(obj, _.matches(attrs));\n      };\n\n      // Convenience version of a common use case of `find`: getting the first object\n      // containing specific `key:value` pairs.\n      _.findWhere = function(obj, attrs) {\n        return _.find(obj, _.matches(attrs));\n      };\n\n      // Return the maximum element or (element-based computation).\n      // Can\'t optimize arrays of integers longer than 65,535 elements.\n      // See [WebKit Bug 80797](https://bugs.webkit.org/show_bug.cgi?id=80797)\n      _.max = function(obj, iterator, context) {\n        if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {\n          return Math.max.apply(Math, obj);\n        }\n        var result = -Infinity, lastComputed = -Infinity;\n        each(obj, function(value, index, list) {\n          var computed = iterator ? iterator.call(context, value, index, list) : value;\n          if (computed > lastComputed) {\n            result = value;\n            lastComputed = computed;\n          }\n        });\n        return result;\n      };\n\n      // Return the minimum element (or element-based computation).\n      _.min = function(obj, iterator, context) {\n        if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {\n          return Math.min.apply(Math, obj);\n        }\n        var result = Infinity, lastComputed = Infinity;\n        each(obj, function(value, index, list) {\n          var computed = iterator ? iterator.call(context, value, index, list) : value;\n          if (computed < lastComputed) {\n            result = value;\n            lastComputed = computed;\n          }\n        });\n        return result;\n      };\n\n      // Shuffle an array, using the modern version of the\n      // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n      _.shuffle = function(obj) {\n        var rand;\n        var index = 0;\n        var shuffled = [];\n        each(obj, function(value) {\n          rand = _.random(index++);\n          shuffled[index - 1] = shuffled[rand];\n          shuffled[rand] = value;\n        });\n        return shuffled;\n      };\n\n      // Sample **n** random values from a collection.\n      // If **n** is not specified, returns a single random element.\n      // The internal `guard` argument allows it to work with `map`.\n      _.sample = function(obj, n, guard) {\n        if (n == null || guard) {\n          if (obj.length !== +obj.length) obj = _.values(obj);\n          return obj[_.random(obj.length - 1)];\n        }\n        return _.shuffle(obj).slice(0, Math.max(0, n));\n      };\n\n      // An internal function to generate lookup iterators.\n      var lookupIterator = function(value) {\n        if (value == null) return _.identity;\n        if (_.isFunction(value)) return value;\n        return _.property(value);\n      };\n\n      // Sort the object\'s values by a criterion produced by an iterator.\n      _.sortBy = function(obj, iterator, context) {\n        iterator = lookupIterator(iterator);\n        return _.pluck(_.map(obj, function(value, index, list) {\n          return {\n            value: value,\n            index: index,\n            criteria: iterator.call(context, value, index, list)\n          };\n        }).sort(function(left, right) {\n          var a = left.criteria;\n          var b = right.criteria;\n          if (a !== b) {\n            if (a > b || a === void 0) return 1;\n            if (a < b || b === void 0) return -1;\n          }\n          return left.index - right.index;\n        }), \'value\');\n      };\n\n      // An internal function used for aggregate \"group by\" operations.\n      var group = function(behavior) {\n        return function(obj, iterator, context) {\n          var result = {};\n          iterator = lookupIterator(iterator);\n          each(obj, function(value, index) {\n            var key = iterator.call(context, value, index, obj);\n            behavior(result, key, value);\n          });\n          return result;\n        };\n      };\n\n      // Groups the object\'s values by a criterion. Pass either a string attribute\n      // to group by, or a function that returns the criterion.\n      _.groupBy = group(function(result, key, value) {\n        _.has(result, key) ? result[key].push(value) : result[key] = [value];\n      });\n\n      // Indexes the object\'s values by a criterion, similar to `groupBy`, but for\n      // when you know that your index values will be unique.\n      _.indexBy = group(function(result, key, value) {\n        result[key] = value;\n      });\n\n      // Counts instances of an object that group by a certain criterion. Pass\n      // either a string attribute to count by, or a function that returns the\n      // criterion.\n      _.countBy = group(function(result, key) {\n        _.has(result, key) ? result[key]++ : result[key] = 1;\n      });\n\n      // Use a comparator function to figure out the smallest index at which\n      // an object should be inserted so as to maintain order. Uses binary search.\n      _.sortedIndex = function(array, obj, iterator, context) {\n        iterator = lookupIterator(iterator);\n        var value = iterator.call(context, obj);\n        var low = 0, high = array.length;\n        while (low < high) {\n          var mid = (low + high) >>> 1;\n          iterator.call(context, array[mid]) < value ? low = mid + 1 : high = mid;\n        }\n        return low;\n      };\n\n      // Safely create a real, live array from anything iterable.\n      _.toArray = function(obj) {\n        if (!obj) return [];\n        if (_.isArray(obj)) return slice.call(obj);\n        if (obj.length === +obj.length) return _.map(obj, _.identity);\n        return _.values(obj);\n      };\n\n      // Return the number of elements in an object.\n      _.size = function(obj) {\n        if (obj == null) return 0;\n        return (obj.length === +obj.length) ? obj.length : _.keys(obj).length;\n      };\n\n      // Array Functions\n      // ---------------\n\n      // Get the first element of an array. Passing **n** will return the first N\n      // values in the array. Aliased as `head` and `take`. The **guard** check\n      // allows it to work with `_.map`.\n      _.first = _.head = _.take = function(array, n, guard) {\n        if (array == null) return void 0;\n        if ((n == null) || guard) return array[0];\n        if (n < 0) return [];\n        return slice.call(array, 0, n);\n      };\n\n      // Returns everything but the last entry of the array. Especially useful on\n      // the arguments object. Passing **n** will return all the values in\n      // the array, excluding the last N. The **guard** check allows it to work with\n      // `_.map`.\n      _.initial = function(array, n, guard) {\n        return slice.call(array, 0, array.length - ((n == null) || guard ? 1 : n));\n      };\n\n      // Get the last element of an array. Passing **n** will return the last N\n      // values in the array. The **guard** check allows it to work with `_.map`.\n      _.last = function(array, n, guard) {\n        if (array == null) return void 0;\n        if ((n == null) || guard) return array[array.length - 1];\n        return slice.call(array, Math.max(array.length - n, 0));\n      };\n\n      // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n      // Especially useful on the arguments object. Passing an **n** will return\n      // the rest N values in the array. The **guard**\n      // check allows it to work with `_.map`.\n      _.rest = _.tail = _.drop = function(array, n, guard) {\n        return slice.call(array, (n == null) || guard ? 1 : n);\n      };\n\n      // Trim out all falsy values from an array.\n      _.compact = function(array) {\n        return _.filter(array, _.identity);\n      };\n\n      // Internal implementation of a recursive `flatten` function.\n      var flatten = function(input, shallow, output) {\n        if (shallow && _.every(input, _.isArray)) {\n          return concat.apply(output, input);\n        }\n        each(input, function(value) {\n          if (_.isArray(value) || _.isArguments(value)) {\n            shallow ? push.apply(output, value) : flatten(value, shallow, output);\n          } else {\n            output.push(value);\n          }\n        });\n        return output;\n      };\n\n      // Flatten out an array, either recursively (by default), or just one level.\n      _.flatten = function(array, shallow) {\n        return flatten(array, shallow, []);\n      };\n\n      // Return a version of the array that does not contain the specified value(s).\n      _.without = function(array) {\n        return _.difference(array, slice.call(arguments, 1));\n      };\n\n      // Split an array into two arrays: one whose elements all satisfy the given\n      // predicate, and one whose elements all do not satisfy the predicate.\n      _.partition = function(array, predicate) {\n        var pass = [], fail = [];\n        each(array, function(elem) {\n          (predicate(elem) ? pass : fail).push(elem);\n        });\n        return [pass, fail];\n      };\n\n      // Produce a duplicate-free version of the array. If the array has already\n      // been sorted, you have the option of using a faster algorithm.\n      // Aliased as `unique`.\n      _.uniq = _.unique = function(array, isSorted, iterator, context) {\n        if (_.isFunction(isSorted)) {\n          context = iterator;\n          iterator = isSorted;\n          isSorted = false;\n        }\n        var initial = iterator ? _.map(array, iterator, context) : array;\n        var results = [];\n        var seen = [];\n        each(initial, function(value, index) {\n          if (isSorted ? (!index || seen[seen.length - 1] !== value) : !_.contains(seen, value)) {\n            seen.push(value);\n            results.push(array[index]);\n          }\n        });\n        return results;\n      };\n\n      // Produce an array that contains the union: each distinct element from all of\n      // the passed-in arrays.\n      _.union = function() {\n        return _.uniq(_.flatten(arguments, true));\n      };\n\n      // Produce an array that contains every item shared between all the\n      // passed-in arrays.\n      _.intersection = function(array) {\n        var rest = slice.call(arguments, 1);\n        return _.filter(_.uniq(array), function(item) {\n          return _.every(rest, function(other) {\n            return _.contains(other, item);\n          });\n        });\n      };\n\n      // Take the difference between one array and a number of other arrays.\n      // Only the elements present in just the first array will remain.\n      _.difference = function(array) {\n        var rest = concat.apply(ArrayProto, slice.call(arguments, 1));\n        return _.filter(array, function(value){ return !_.contains(rest, value); });\n      };\n\n      // Zip together multiple lists into a single array -- elements that share\n      // an index go together.\n      _.zip = function() {\n        var length = _.max(_.pluck(arguments, \'length\').concat(0));\n        var results = new Array(length);\n        for (var i = 0; i < length; i++) {\n          results[i] = _.pluck(arguments, \'\' + i);\n        }\n        return results;\n      };\n\n      // Converts lists into objects. Pass either a single array of `[key, value]`\n      // pairs, or two parallel arrays of the same length -- one of keys, and one of\n      // the corresponding values.\n      _.object = function(list, values) {\n        if (list == null) return {};\n        var result = {};\n        for (var i = 0, length = list.length; i < length; i++) {\n          if (values) {\n            result[list[i]] = values[i];\n          } else {\n            result[list[i][0]] = list[i][1];\n          }\n        }\n        return result;\n      };\n\n      // If the browser doesn\'t supply us with indexOf (I\'m looking at you, **MSIE**),\n      // we need this function. Return the position of the first occurrence of an\n      // item in an array, or -1 if the item is not included in the array.\n      // Delegates to **ECMAScript 5**\'s native `indexOf` if available.\n      // If the array is large and already in sort order, pass `true`\n      // for **isSorted** to use binary search.\n      _.indexOf = function(array, item, isSorted) {\n        if (array == null) return -1;\n        var i = 0, length = array.length;\n        if (isSorted) {\n          if (typeof isSorted == \'number\') {\n            i = (isSorted < 0 ? Math.max(0, length + isSorted) : isSorted);\n          } else {\n            i = _.sortedIndex(array, item);\n            return array[i] === item ? i : -1;\n          }\n        }\n        if (nativeIndexOf && array.indexOf === nativeIndexOf) return array.indexOf(item, isSorted);\n        for (; i < length; i++) if (array[i] === item) return i;\n        return -1;\n      };\n\n      // Delegates to **ECMAScript 5**\'s native `lastIndexOf` if available.\n      _.lastIndexOf = function(array, item, from) {\n        if (array == null) return -1;\n        var hasIndex = from != null;\n        if (nativeLastIndexOf && array.lastIndexOf === nativeLastIndexOf) {\n          return hasIndex ? array.lastIndexOf(item, from) : array.lastIndexOf(item);\n        }\n        var i = (hasIndex ? from : array.length);\n        while (i--) if (array[i] === item) return i;\n        return -1;\n      };\n\n      // Generate an integer Array containing an arithmetic progression. A port of\n      // the native Python `range()` function. See\n      // [the Python documentation](http://docs.python.org/library/functions.html#range).\n      _.range = function(start, stop, step) {\n        if (arguments.length <= 1) {\n          stop = start || 0;\n          start = 0;\n        }\n        step = arguments[2] || 1;\n\n        var length = Math.max(Math.ceil((stop - start) / step), 0);\n        var idx = 0;\n        var range = new Array(length);\n\n        while(idx < length) {\n          range[idx++] = start;\n          start += step;\n        }\n\n        return range;\n      };\n\n      // Function (ahem) Functions\n      // ------------------\n\n      // Reusable constructor function for prototype setting.\n      var ctor = function(){};\n\n      // Create a function bound to a given object (assigning `this`, and arguments,\n      // optionally). Delegates to **ECMAScript 5**\'s native `Function.bind` if\n      // available.\n      _.bind = function(func, context) {\n        var args, bound;\n        if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n        if (!_.isFunction(func)) throw new TypeError;\n        args = slice.call(arguments, 2);\n        return bound = function() {\n          if (!(this instanceof bound)) return func.apply(context, args.concat(slice.call(arguments)));\n          ctor.prototype = func.prototype;\n          var self = new ctor;\n          ctor.prototype = null;\n          var result = func.apply(self, args.concat(slice.call(arguments)));\n          if (Object(result) === result) return result;\n          return self;\n        };\n      };\n\n      // Partially apply a function by creating a version that has had some of its\n      // arguments pre-filled, without changing its dynamic `this` context. _ acts\n      // as a placeholder, allowing any combination of arguments to be pre-filled.\n      _.partial = function(func) {\n        var boundArgs = slice.call(arguments, 1);\n        return function() {\n          var position = 0;\n          var args = boundArgs.slice();\n          for (var i = 0, length = args.length; i < length; i++) {\n            if (args[i] === _) args[i] = arguments[position++];\n          }\n          while (position < arguments.length) args.push(arguments[position++]);\n          return func.apply(this, args);\n        };\n      };\n\n      // Bind a number of an object\'s methods to that object. Remaining arguments\n      // are the method names to be bound. Useful for ensuring that all callbacks\n      // defined on an object belong to it.\n      _.bindAll = function(obj) {\n        var funcs = slice.call(arguments, 1);\n        if (funcs.length === 0) throw new Error(\'bindAll must be passed function names\');\n        each(funcs, function(f) { obj[f] = _.bind(obj[f], obj); });\n        return obj;\n      };\n\n      // Memoize an expensive function by storing its results.\n      _.memoize = function(func, hasher) {\n        var memo = {};\n        hasher || (hasher = _.identity);\n        return function() {\n          var key = hasher.apply(this, arguments);\n          return _.has(memo, key) ? memo[key] : (memo[key] = func.apply(this, arguments));\n        };\n      };\n\n      // Delays a function for the given number of milliseconds, and then calls\n      // it with the arguments supplied.\n      _.delay = function(func, wait) {\n        var args = slice.call(arguments, 2);\n        return setTimeout(function(){ return func.apply(null, args); }, wait);\n      };\n\n      // Defers a function, scheduling it to run after the current call stack has\n      // cleared.\n      _.defer = function(func) {\n        return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));\n      };\n\n      // Returns a function, that, when invoked, will only be triggered at most once\n      // during a given window of time. Normally, the throttled function will run\n      // as much as it can, without ever going more than once per `wait` duration;\n      // but if you\'d like to disable the execution on the leading edge, pass\n      // `{leading: false}`. To disable execution on the trailing edge, ditto.\n      _.throttle = function(func, wait, options) {\n        var context, args, result;\n        var timeout = null;\n        var previous = 0;\n        options || (options = {});\n        var later = function() {\n          previous = options.leading === false ? 0 : _.now();\n          timeout = null;\n          result = func.apply(context, args);\n          context = args = null;\n        };\n        return function() {\n          var now = _.now();\n          if (!previous && options.leading === false) previous = now;\n          var remaining = wait - (now - previous);\n          context = this;\n          args = arguments;\n          if (remaining <= 0) {\n            clearTimeout(timeout);\n            timeout = null;\n            previous = now;\n            result = func.apply(context, args);\n            context = args = null;\n          } else if (!timeout && options.trailing !== false) {\n            timeout = setTimeout(later, remaining);\n          }\n          return result;\n        };\n      };\n\n      // Returns a function, that, as long as it continues to be invoked, will not\n      // be triggered. The function will be called after it stops being called for\n      // N milliseconds. If `immediate` is passed, trigger the function on the\n      // leading edge, instead of the trailing.\n      _.debounce = function(func, wait, immediate) {\n        var timeout, args, context, timestamp, result;\n\n        var later = function() {\n          var last = _.now() - timestamp;\n          if (last < wait) {\n            timeout = setTimeout(later, wait - last);\n          } else {\n            timeout = null;\n            if (!immediate) {\n              result = func.apply(context, args);\n              context = args = null;\n            }\n          }\n        };\n\n        return function() {\n          context = this;\n          args = arguments;\n          timestamp = _.now();\n          var callNow = immediate && !timeout;\n          if (!timeout) {\n            timeout = setTimeout(later, wait);\n          }\n          if (callNow) {\n            result = func.apply(context, args);\n            context = args = null;\n          }\n\n          return result;\n        };\n      };\n\n      // Returns a function that will be executed at most one time, no matter how\n      // often you call it. Useful for lazy initialization.\n      _.once = function(func) {\n        var ran = false, memo;\n        return function() {\n          if (ran) return memo;\n          ran = true;\n          memo = func.apply(this, arguments);\n          func = null;\n          return memo;\n        };\n      };\n\n      // Returns the first function passed as an argument to the second,\n      // allowing you to adjust arguments, run code before and after, and\n      // conditionally execute the original function.\n      _.wrap = function(func, wrapper) {\n        return _.partial(wrapper, func);\n      };\n\n      // Returns a function that is the composition of a list of functions, each\n      // consuming the return value of the function that follows.\n      _.compose = function() {\n        var funcs = arguments;\n        return function() {\n          var args = arguments;\n          for (var i = funcs.length - 1; i >= 0; i--) {\n            args = [funcs[i].apply(this, args)];\n          }\n          return args[0];\n        };\n      };\n\n      // Returns a function that will only be executed after being called N times.\n      _.after = function(times, func) {\n        return function() {\n          if (--times < 1) {\n            return func.apply(this, arguments);\n          }\n        };\n      };\n\n      // Object Functions\n      // ----------------\n\n      // Retrieve the names of an object\'s properties.\n      // Delegates to **ECMAScript 5**\'s native `Object.keys`\n      _.keys = function(obj) {\n        if (!_.isObject(obj)) return [];\n        if (nativeKeys) return nativeKeys(obj);\n        var keys = [];\n        for (var key in obj) if (_.has(obj, key)) keys.push(key);\n        return keys;\n      };\n\n      // Retrieve the values of an object\'s properties.\n      _.values = function(obj) {\n        var keys = _.keys(obj);\n        var length = keys.length;\n        var values = new Array(length);\n        for (var i = 0; i < length; i++) {\n          values[i] = obj[keys[i]];\n        }\n        return values;\n      };\n\n      // Convert an object into a list of `[key, value]` pairs.\n      _.pairs = function(obj) {\n        var keys = _.keys(obj);\n        var length = keys.length;\n        var pairs = new Array(length);\n        for (var i = 0; i < length; i++) {\n          pairs[i] = [keys[i], obj[keys[i]]];\n        }\n        return pairs;\n      };\n\n      // Invert the keys and values of an object. The values must be serializable.\n      _.invert = function(obj) {\n        var result = {};\n        var keys = _.keys(obj);\n        for (var i = 0, length = keys.length; i < length; i++) {\n          result[obj[keys[i]]] = keys[i];\n        }\n        return result;\n      };\n\n      // Return a sorted list of the function names available on the object.\n      // Aliased as `methods`\n      _.functions = _.methods = function(obj) {\n        var names = [];\n        for (var key in obj) {\n          if (_.isFunction(obj[key])) names.push(key);\n        }\n        return names.sort();\n      };\n\n      // Extend a given object with all the properties in passed-in object(s).\n      _.extend = function(obj) {\n        each(slice.call(arguments, 1), function(source) {\n          if (source) {\n            for (var prop in source) {\n              obj[prop] = source[prop];\n            }\n          }\n        });\n        return obj;\n      };\n\n      // Return a copy of the object only containing the whitelisted properties.\n      _.pick = function(obj) {\n        var copy = {};\n        var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\n        each(keys, function(key) {\n          if (key in obj) copy[key] = obj[key];\n        });\n        return copy;\n      };\n\n       // Return a copy of the object without the blacklisted properties.\n      _.omit = function(obj) {\n        var copy = {};\n        var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\n        for (var key in obj) {\n          if (!_.contains(keys, key)) copy[key] = obj[key];\n        }\n        return copy;\n      };\n\n      // Fill in a given object with default properties.\n      _.defaults = function(obj) {\n        each(slice.call(arguments, 1), function(source) {\n          if (source) {\n            for (var prop in source) {\n              if (obj[prop] === void 0) obj[prop] = source[prop];\n            }\n          }\n        });\n        return obj;\n      };\n\n      // Create a (shallow-cloned) duplicate of an object.\n      _.clone = function(obj) {\n        if (!_.isObject(obj)) return obj;\n        return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n      };\n\n      // Invokes interceptor with the obj, and then returns obj.\n      // The primary purpose of this method is to \"tap into\" a method chain, in\n      // order to perform operations on intermediate results within the chain.\n      _.tap = function(obj, interceptor) {\n        interceptor(obj);\n        return obj;\n      };\n\n      // Internal recursive comparison function for `isEqual`.\n      var eq = function(a, b, aStack, bStack) {\n        // Identical objects are equal. `0 === -0`, but they aren\'t identical.\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n        if (a === b) return a !== 0 || 1 / a == 1 / b;\n        // A strict comparison is necessary because `null == undefined`.\n        if (a == null || b == null) return a === b;\n        // Unwrap any wrapped objects.\n        if (a instanceof _) a = a._wrapped;\n        if (b instanceof _) b = b._wrapped;\n        // Compare `[[Class]]` names.\n        var className = toString.call(a);\n        if (className != toString.call(b)) return false;\n        switch (className) {\n          // Strings, numbers, dates, and booleans are compared by value.\n          case \'[object String]\':\n            // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n            // equivalent to `new String(\"5\")`.\n            return a == String(b);\n          case \'[object Number]\':\n            // `NaN`s are equivalent, but non-reflexive. An `egal` comparison is performed for\n            // other numeric values.\n            return a != +a ? b != +b : (a == 0 ? 1 / a == 1 / b : a == +b);\n          case \'[object Date]\':\n          case \'[object Boolean]\':\n            // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n            // millisecond representations. Note that invalid dates with millisecond representations\n            // of `NaN` are not equivalent.\n            return +a == +b;\n          // RegExps are compared by their source patterns and flags.\n          case \'[object RegExp]\':\n            return a.source == b.source &&\n                   a.global == b.global &&\n                   a.multiline == b.multiline &&\n                   a.ignoreCase == b.ignoreCase;\n        }\n        if (typeof a != \'object\' || typeof b != \'object\') return false;\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n        var length = aStack.length;\n        while (length--) {\n          // Linear search. Performance is inversely proportional to the number of\n          // unique nested structures.\n          if (aStack[length] == a) return bStack[length] == b;\n        }\n        // Objects with different constructors are not equivalent, but `Object`s\n        // from different frames are.\n        var aCtor = a.constructor, bCtor = b.constructor;\n        if (aCtor !== bCtor && !(_.isFunction(aCtor) && (aCtor instanceof aCtor) &&\n                                 _.isFunction(bCtor) && (bCtor instanceof bCtor))\n                            && (\'constructor\' in a && \'constructor\' in b)) {\n          return false;\n        }\n        // Add the first object to the stack of traversed objects.\n        aStack.push(a);\n        bStack.push(b);\n        var size = 0, result = true;\n        // Recursively compare objects and arrays.\n        if (className == \'[object Array]\') {\n          // Compare array lengths to determine if a deep comparison is necessary.\n          size = a.length;\n          result = size == b.length;\n          if (result) {\n            // Deep compare the contents, ignoring non-numeric properties.\n            while (size--) {\n              if (!(result = eq(a[size], b[size], aStack, bStack))) break;\n            }\n          }\n        } else {\n          // Deep compare objects.\n          for (var key in a) {\n            if (_.has(a, key)) {\n              // Count the expected number of properties.\n              size++;\n              // Deep compare each member.\n              if (!(result = _.has(b, key) && eq(a[key], b[key], aStack, bStack))) break;\n            }\n          }\n          // Ensure that both objects contain the same number of properties.\n          if (result) {\n            for (key in b) {\n              if (_.has(b, key) && !(size--)) break;\n            }\n            result = !size;\n          }\n        }\n        // Remove the first object from the stack of traversed objects.\n        aStack.pop();\n        bStack.pop();\n        return result;\n      };\n\n      // Perform a deep comparison to check if two objects are equal.\n      _.isEqual = function(a, b) {\n        return eq(a, b, [], []);\n      };\n\n      // Is a given array, string, or object empty?\n      // An \"empty\" object has no enumerable own-properties.\n      _.isEmpty = function(obj) {\n        if (obj == null) return true;\n        if (_.isArray(obj) || _.isString(obj)) return obj.length === 0;\n        for (var key in obj) if (_.has(obj, key)) return false;\n        return true;\n      };\n\n      // Is a given value a DOM element?\n      _.isElement = function(obj) {\n        return !!(obj && obj.nodeType === 1);\n      };\n\n      // Is a given value an array?\n      // Delegates to ECMA5\'s native Array.isArray\n      _.isArray = nativeIsArray || function(obj) {\n        return toString.call(obj) == \'[object Array]\';\n      };\n\n      // Is a given variable an object?\n      _.isObject = function(obj) {\n        return obj === Object(obj);\n      };\n\n      // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp.\n      each([\'Arguments\', \'Function\', \'String\', \'Number\', \'Date\', \'RegExp\'], function(name) {\n        _[\'is\' + name] = function(obj) {\n          return toString.call(obj) == \'[object \' + name + \']\';\n        };\n      });\n\n      // Define a fallback version of the method in browsers (ahem, IE), where\n      // there isn\'t any inspectable \"Arguments\" type.\n      if (!_.isArguments(arguments)) {\n        _.isArguments = function(obj) {\n          return !!(obj && _.has(obj, \'callee\'));\n        };\n      }\n\n      // Optimize `isFunction` if appropriate.\n      if (typeof (/./) !== \'function\') {\n        _.isFunction = function(obj) {\n          return typeof obj === \'function\';\n        };\n      }\n\n      // Is a given object a finite number?\n      _.isFinite = function(obj) {\n        return isFinite(obj) && !isNaN(parseFloat(obj));\n      };\n\n      // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n      _.isNaN = function(obj) {\n        return _.isNumber(obj) && obj != +obj;\n      };\n\n      // Is a given value a boolean?\n      _.isBoolean = function(obj) {\n        return obj === true || obj === false || toString.call(obj) == \'[object Boolean]\';\n      };\n\n      // Is a given value equal to null?\n      _.isNull = function(obj) {\n        return obj === null;\n      };\n\n      // Is a given variable undefined?\n      _.isUndefined = function(obj) {\n        return obj === void 0;\n      };\n\n      // Shortcut function for checking if an object has a given property directly\n      // on itself (in other words, not on a prototype).\n      _.has = function(obj, key) {\n        return hasOwnProperty.call(obj, key);\n      };\n\n      // Utility Functions\n      // -----------------\n\n      // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n      // previous owner. Returns a reference to the Underscore object.\n      _.noConflict = function() {\n        root._ = previousUnderscore;\n        return this;\n      };\n\n      // Keep the identity function around for default iterators.\n      _.identity = function(value) {\n        return value;\n      };\n\n      _.constant = function(value) {\n        return function () {\n          return value;\n        };\n      };\n\n      _.property = function(key) {\n        return function(obj) {\n          return obj[key];\n        };\n      };\n\n      // Returns a predicate for checking whether an object has a given set of `key:value` pairs.\n      _.matches = function(attrs) {\n        return function(obj) {\n          if (obj === attrs) return true; //avoid comparing an object to itself.\n          for (var key in attrs) {\n            if (attrs[key] !== obj[key])\n              return false;\n          }\n          return true;\n        }\n      };\n\n      // Run a function **n** times.\n      _.times = function(n, iterator, context) {\n        var accum = Array(Math.max(0, n));\n        for (var i = 0; i < n; i++) accum[i] = iterator.call(context, i);\n        return accum;\n      };\n\n      // Return a random integer between min and max (inclusive).\n      _.random = function(min, max) {\n        if (max == null) {\n          max = min;\n          min = 0;\n        }\n        return min + Math.floor(Math.random() * (max - min + 1));\n      };\n\n      // A (possibly faster) way to get the current timestamp as an integer.\n      _.now = Date.now || function() { return new Date().getTime(); };\n\n      // List of HTML entities for escaping.\n      var entityMap = {\n        escape: {\n          \'&\': \'&amp;\',\n          \'<\': \'&lt;\',\n          \'>\': \'&gt;\',\n          \'\"\': \'&quot;\',\n          \"\'\": \'&#x27;\'\n        }\n      };\n      entityMap.unescape = _.invert(entityMap.escape);\n\n      // Regexes containing the keys and values listed immediately above.\n      var entityRegexes = {\n        escape:   new RegExp(\'[\' + _.keys(entityMap.escape).join(\'\') + \']\', \'g\'),\n        unescape: new RegExp(\'(\' + _.keys(entityMap.unescape).join(\'|\') + \')\', \'g\')\n      };\n\n      // Functions for escaping and unescaping strings to/from HTML interpolation.\n      _.each([\'escape\', \'unescape\'], function(method) {\n        _[method] = function(string) {\n          if (string == null) return \'\';\n          return (\'\' + string).replace(entityRegexes[method], function(match) {\n            return entityMap[method][match];\n          });\n        };\n      });\n\n      // If the value of the named `property` is a function then invoke it with the\n      // `object` as context; otherwise, return it.\n      _.result = function(object, property) {\n        if (object == null) return void 0;\n        var value = object[property];\n        return _.isFunction(value) ? value.call(object) : value;\n      };\n\n      // Add your own custom functions to the Underscore object.\n      _.mixin = function(obj) {\n        each(_.functions(obj), function(name) {\n          var func = _[name] = obj[name];\n          _.prototype[name] = function() {\n            var args = [this._wrapped];\n            push.apply(args, arguments);\n            return result.call(this, func.apply(_, args));\n          };\n        });\n      };\n\n      // Generate a unique integer id (unique within the entire client session).\n      // Useful for temporary DOM ids.\n      var idCounter = 0;\n      _.uniqueId = function(prefix) {\n        var id = ++idCounter + \'\';\n        return prefix ? prefix + id : id;\n      };\n\n      // By default, Underscore uses ERB-style template delimiters, change the\n      // following template settings to use alternative delimiters.\n      _.templateSettings = {\n        evaluate    : /<%([\\s\\S]+?)%>/g,\n        interpolate : /<%=([\\s\\S]+?)%>/g,\n        escape      : /<%-([\\s\\S]+?)%>/g\n      };\n\n      // When customizing `templateSettings`, if you don\'t want to define an\n      // interpolation, evaluation or escaping regex, we need one that is\n      // guaranteed not to match.\n      var noMatch = /(.)^/;\n\n      // Certain characters need to be escaped so that they can be put into a\n      // string literal.\n      var escapes = {\n        \"\'\":      \"\'\",\n        \'\\\\\':     \'\\\\\',\n        \'\\r\':     \'r\',\n        \'\\n\':     \'n\',\n        \'\\t\':     \'t\',\n        \'\\u2028\': \'u2028\',\n        \'\\u2029\': \'u2029\'\n      };\n\n      var escaper = /\\\\|\'|\\r|\\n|\\t|\\u2028|\\u2029/g;\n\n      // JavaScript micro-templating, similar to John Resig\'s implementation.\n      // Underscore templating handles arbitrary delimiters, preserves whitespace,\n      // and correctly escapes quotes within interpolated code.\n      _.template = function(text, data, settings) {\n        var render;\n        settings = _.defaults({}, settings, _.templateSettings);\n\n        // Combine delimiters into one regular expression via alternation.\n        var matcher = new RegExp([\n          (settings.escape || noMatch).source,\n          (settings.interpolate || noMatch).source,\n          (settings.evaluate || noMatch).source\n        ].join(\'|\') + \'|$\', \'g\');\n\n        // Compile the template source, escaping string literals appropriately.\n        var index = 0;\n        var source = \"__p+=\'\";\n        text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n          source += text.slice(index, offset)\n            .replace(escaper, function(match) { return \'\\\\\' + escapes[match]; });\n\n          if (escape) {\n            source += \"\'+\\n((__t=(\" + escape + \"))==null?\'\':_.escape(__t))+\\n\'\";\n          }\n          if (interpolate) {\n            source += \"\'+\\n((__t=(\" + interpolate + \"))==null?\'\':__t)+\\n\'\";\n          }\n          if (evaluate) {\n            source += \"\';\\n\" + evaluate + \"\\n__p+=\'\";\n          }\n          index = offset + match.length;\n          return match;\n        });\n        source += \"\';\\n\";\n\n        // If a variable is not specified, place data values in local scope.\n        if (!settings.variable) source = \'with(obj||{}){\\n\' + source + \'}\\n\';\n\n        source = \"var __t,__p=\'\',__j=Array.prototype.join,\" +\n          \"print=function(){__p+=__j.call(arguments,\'\');};\\n\" +\n          source + \"return __p;\\n\";\n\n        try {\n          render = new Function(settings.variable || \'obj\', \'_\', source);\n        } catch (e) {\n          e.source = source;\n          throw e;\n        }\n\n        if (data) return render(data, _);\n        var template = function(data) {\n          return render.call(this, data, _);\n        };\n\n        // Provide the compiled function source as a convenience for precompilation.\n        template.source = \'function(\' + (settings.variable || \'obj\') + \'){\\n\' + source + \'}\';\n\n        return template;\n      };\n\n      // Add a \"chain\" function, which will delegate to the wrapper.\n      _.chain = function(obj) {\n        return _(obj).chain();\n      };\n\n      // OOP\n      // ---------------\n      // If Underscore is called as a function, it returns a wrapped object that\n      // can be used OO-style. This wrapper holds altered versions of all the\n      // underscore functions. Wrapped objects may be chained.\n\n      // Helper function to continue chaining intermediate results.\n      var result = function(obj) {\n        return this._chain ? _(obj).chain() : obj;\n      };\n\n      // Add all of the Underscore functions to the wrapper object.\n      _.mixin(_);\n\n      // Add all mutator Array functions to the wrapper.\n      each([\'pop\', \'push\', \'reverse\', \'shift\', \'sort\', \'splice\', \'unshift\'], function(name) {\n        var method = ArrayProto[name];\n        _.prototype[name] = function() {\n          var obj = this._wrapped;\n          method.apply(obj, arguments);\n          if ((name == \'shift\' || name == \'splice\') && obj.length === 0) delete obj[0];\n          return result.call(this, obj);\n        };\n      });\n\n      // Add all accessor Array functions to the wrapper.\n      each([\'concat\', \'join\', \'slice\'], function(name) {\n        var method = ArrayProto[name];\n        _.prototype[name] = function() {\n          return result.call(this, method.apply(this._wrapped, arguments));\n        };\n      });\n\n      _.extend(_.prototype, {\n\n        // Start chaining a wrapped Underscore object.\n        chain: function() {\n          this._chain = true;\n          return this;\n        },\n\n        // Extracts the result from a wrapped and chained object.\n        value: function() {\n          return this._wrapped;\n        }\n\n      });\n\n      // AMD registration happens at the end for compatibility with AMD loaders\n      // that may not enforce next-turn semantics on modules. Even though general\n      // practice for AMD registration is to be anonymous, underscore registers\n      // as a named module because, like jQuery, it is a base library that is\n      // popular enough to be bundled in a third party lib, but not be part of\n      // an AMD load request. Those cases could generate an error when an\n      // anonymous define() is called outside of a loader request.\n      if (typeof define === \'function\' && define.amd) {\n        define(\'underscore\', [], function() {\n          return _;\n        });\n      }\n    }).call(this);\n  });//# sourceURL=vendor/underscore/underscore.js");

;eval("define(\"mikomos/router\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    var Router = Ember.Router.extend({\n      location: MikomosENV.locationType\n    });\n\n    Router.map(function() {\n    	this.route(\'browse\');\n    	this.resource(\'search\', function() {\n    		this.route(\'query\', {path: \'/:query\'});\n    	});\n    	this.route(\'makom\', {path: \'/makom/:id\'});\n    	this.route(\'near-me\');\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=mikomos/router.js");

;eval("define(\"mikomos/routes/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Route.extend({\n    	model: function() {\n    		return Ember.$.getJSON(\'mikomos.json\');\n    	},\n    });\n  });//# sourceURL=mikomos/routes/application.js");

;eval("define(\"mikomos/routes/browse\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Route.extend({\n    	model: function() {\n    		return this.modelFor(\'application\').mikomos;\n    	}\n    });\n  });//# sourceURL=mikomos/routes/browse.js");

;eval("define(\"mikomos/routes/makom\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Route.extend({\n    	model: function(params) {\n    		var number = Number(params.id);\n    		var model = this.modelFor(\'application\').mikomos;\n    		return model.findBy(\'id\', number);\n    	}\n    });\n  });//# sourceURL=mikomos/routes/makom.js");

;eval("define(\"mikomos/routes/search/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Route.extend({\n    	model: function() {\n    		var model = this.modelFor(\'application\').mikomos;\n    		return model;\n    	}\n    });\n  });//# sourceURL=mikomos/routes/search/index.js");

;eval("define(\"mikomos/routes/search/query\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Route.extend({\n    	model: function(params) {\n    		var model = this.modelFor(\'application\').mikomos;\n    		var regex = new RegExp(params.query, \'i\');\n    		return model.filter(function(item) {\n    			return item.title.match(regex);\n    		});\n    	}\n    });\n  });//# sourceURL=mikomos/routes/search/query.js");

;eval("define(\"mikomos/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var stack1;\n      stack1 = helpers._triageMustache.call(depth0, \"back-button\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      else { data.buffer.push(\'\'); }\n      }\n\n    function program3(depth0,data) {\n      \n      \n      data.buffer.push(\"<img src=\\\"images/mikomos_banner.svg\\\" style=\\\"height:50px\\\">\");\n      }\n\n      data.buffer.push(\"<nav class=\\\"navbar navbar-default\\\">\\n	<div class=\\\"container-fluid\\\">\\n		<div class=\\\"row\\\">\\n			<div class=\\\"col-xs-3 text-left\\\">\\n				\");\n      stack1 = helpers.unless.call(depth0, \"isHome\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n			</div>\\n			<div class=\\\"col-xs-6 text-center\\\">\\n				\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"application\", options) : helperMissing.call(depth0, \"link-to\", \"application\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n			</div>\\n		</div> \\n	</div> \\n</nav>\\n	<div class=\\\"container-fluid\\\">\\n	\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n	</div>\\n	<span style=\\\"display:block; height:70px;\\\"></span>\\n<nav class=\\\"navbar navbar-default navbar-fixed-bottom\\\" role=\\\"navigation\\\">\\n	<div class=\\\"container-fluid\\\">\\n		<p class=\\\"navbar-text\\\">&copy; 2014 Eli Samuel</p>\\n	</div>\\n</nav>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=mikomos/templates/application.js");

;eval("define(\"mikomos/templates/browse\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"	<div class=\\\"row\\\">\\n		<div class=\\\"col-xs-10 col-xs-offset-2\\\">\\n			<h1>Browse</h1>\\n			<p><small>Click on a makom to view details.</small></p>\\n		</div>\\n	</div>\\n	<div class=\\\"row\\\">\\n		<div class=\\\"col-xs-12\\\">\\n			\");\n      data.buffer.push(escapeExpression((helper = helpers[\'results-view\'] || (depth0 && depth0[\'results-view\']),options={hash:{\n        \'model\': (\"model\")\n      },hashTypes:{\'model\': \"ID\"},hashContexts:{\'model\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"results-view\", options))));\n      data.buffer.push(\"\\n		</div>\\n	</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=mikomos/templates/browse.js");

;eval("define(\"mikomos/templates/components/add-this\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\';\n\n\n      return buffer;\n      \n    });\n  });//# sourceURL=mikomos/templates/components/add-this.js");

;eval("define(\"mikomos/templates/components/auto-complete\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n						\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'classNames\': (\"list-group-item\")\n      },hashTypes:{\'classNames\': \"STRING\"},hashContexts:{\'classNames\': depth0},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data},helper ? helper.call(depth0, \"makom\", \"id\", options) : helperMissing.call(depth0, \"link-to\", \"makom\", \"id\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n					\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var stack1;\n      stack1 = helpers._triageMustache.call(depth0, \"title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      else { data.buffer.push(\'\'); }\n      }\n\n      data.buffer.push(\"	<div class=\\\"row\\\">\\n		<div class=\\\"col-xs-12\\\">\\n			<form id=\\\"autocomplete\\\" role=\\\"search\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"search\", {hash:{\n        \'on\': (\"submit\")\n      },hashTypes:{\'on\': \"STRING\"},hashContexts:{\'on\': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">\\n				<div class=\\\"input-group\\\">\\n					\");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'id\': (\"searchBox\"),\n        \'classNames\': (\"form-control input-lg\"),\n        \'value\': (\"searchText\"),\n        \'placeholder\': (\"Search mikomos...\")\n      },hashTypes:{\'id\': \"STRING\",\'classNames\': \"STRING\",\'value\': \"ID\",\'placeholder\': \"STRING\"},hashContexts:{\'id\': depth0,\'classNames\': depth0,\'value\': depth0,\'placeholder\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n					<span class=\\\"input-group-btn\\\">\\n						<submit class=\\\"btn btn-primary btn-lg\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"search\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">\\n								<span class=\\\"glyphicon glyphicon-search\\\"></span>\\n						</submit>\\n					</span>\\n				</div>\\n			</form>\\n		</div>\\n	</div>\\n	<div class=\\\"row\\\">\\n		<div class=\\\"col-xs-12\\\">\\n			<div class=\\\"list-group dropdown\\\">\\n					\");\n      stack1 = helpers.each.call(depth0, \"searchResults\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n			</div>\\n		</div>\\n	</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=mikomos/templates/components/auto-complete.js");

;eval("define(\"mikomos/templates/components/back-button\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<span class=\\\"glyphicon glyphicon-chevron-left\\\"></span>\");\n      \n    });\n  });//# sourceURL=mikomos/templates/components/back-button.js");

;eval("define(\"mikomos/templates/components/mikomos-table\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n			\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'tagName\': (\"tr\"),\n        \'classNames\': (\"pointer\")\n      },hashTypes:{\'tagName\': \"STRING\",\'classNames\': \"STRING\"},hashContexts:{\'tagName\': depth0,\'classNames\': depth0},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data},helper ? helper.call(depth0, \"makom\", \"id\", options) : helperMissing.call(depth0, \"link-to\", \"makom\", \"id\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n		\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n				<td>\");\n      stack1 = helpers.each.call(depth0, \"categories\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n				<td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n				<td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"address\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n				<td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"city\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n				<td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"state\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n				<td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"zip\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n				<td>\");\n      stack1 = helpers._triageMustache.call(depth0, \"phone\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</td>\\n			\");\n      return buffer;\n      }\n    function program3(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"<span class=\\\"flaticon flaticon-\");\n      stack1 = helpers._triageMustache.call(depth0, \"\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" flaticon-2x\\\"></span>\");\n      return buffer;\n      }\n\n      data.buffer.push(\"	<table class=\\\"table table-hover\\\">\\n		<tbody>\\n		\");\n      stack1 = helpers.each.call(depth0, \"model\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n		</tbody>\\n	</table>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=mikomos/templates/components/mikomos-table.js");

;eval("define(\"mikomos/templates/components/radio-group\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n	<div class=\\\"row\\\">\\n		<div class=\\\"col-xs-12\\\">\\n			<label>\\n				\");\n      data.buffer.push(escapeExpression((helper = helpers[\'radio-button\'] || (depth0 && depth0[\'radio-button\']),options={hash:{\n        \'value\': (\"category\"),\n        \'selection\': (\"view.value\")\n      },hashTypes:{\'value\': \"ID\",\'selection\': \"ID\"},hashContexts:{\'value\': depth0,\'selection\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"radio-button\", options))));\n      data.buffer.push(\"\\n				<i class=\\\"flaticon flaticon-\");\n      stack1 = helpers._triageMustache.call(depth0, \"category\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" flaticon-2x\\\"></i>\\n			</label>\\n			\");\n      stack1 = helpers._triageMustache.call(depth0, \"category\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n		</div>\\n	</div>\\n    \");\n      return buffer;\n      }\n\n      data.buffer.push(\"	\");\n      stack1 = helpers.each.call(depth0, \"category\", \"in\", \"content\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      return buffer;\n      \n    });\n  });//# sourceURL=mikomos/templates/components/radio-group.js");

;eval("define(\"mikomos/templates/components/results-view\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n      data.buffer.push(\"	<div class=\\\"row\\\">\\n		<div class=\\\"col-xs-12\\\">\\n			Record \");\n      stack1 = helpers._triageMustache.call(depth0, \"offset\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" to \");\n      stack1 = helpers._triageMustache.call(depth0, \"maxRecord\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" of \");\n      stack1 = helpers._triageMustache.call(depth0, \"modelLength\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n			<ul class=\\\"pager\\\">\\n				\\n				<li \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":previous noPreviousPage:disabled\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n					<a class=\\\"pointer\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"prevPage\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">&larr; Previous</a>\\n				</li>\\n				\\n				\\n				<li \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":next noNextPage:disabled\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n					<a class=\\\"pointer\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"nextPage\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'disabled\': (\"noNextPage\")\n      },hashTypes:{\'disabled\': \"ID\"},hashContexts:{\'disabled\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">Next &rarr;</a>\\n				</li>\\n				\\n			</ul>\\n		</div>\\n	</div>\\n	<div class=\\\"row\\\">\\n		<div class=\\\"col-xs-12\\\">\\n		\");\n      data.buffer.push(escapeExpression((helper = helpers[\'mikomos-table\'] || (depth0 && depth0[\'mikomos-table\']),options={hash:{\n        \'model\': (\"arrangedContent\")\n      },hashTypes:{\'model\': \"ID\"},hashContexts:{\'model\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"mikomos-table\", options))));\n      data.buffer.push(\"\\n		</div>\\n	</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=mikomos/templates/components/results-view.js");

;eval("define(\"mikomos/templates/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n			<h1><span class=\\\"glyphicon glyphicon-search\\\"></span> Search</h1>\\n			<p>Advanced search of Mikomos</p>\\n		\");\n      }\n\n    function program3(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n			<h1><span class=\\\"glyphicon glyphicon-list\\\"></span> Browse</h1>\\n			<p>Browse through the list of mikomos.</p>\\n		\");\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n			<h1><span class=\\\"glyphicon glyphicon-refresh\\\"></span> Sync</h1>\\n			<p>Last Update: \");\n      stack1 = helpers._triageMustache.call(depth0, \"databaseDate\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</p>\\n		\");\n      return buffer;\n      }\n\n    function program7(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n			<h1><span class=\\\"glyphicon glyphicon-user\\\"></span> About</h1>\\n			<p>About Mikomos</p>\\n		\");\n      }\n\n      data.buffer.push(\"	<div class=\\\"row\\\">\\n		<div class=\\\"col-xs-6 col-xs-offset-3\\\">\\n			<img src=\\\"images/mikomos_banner.svg\\\" class=\\\"img-responsive\\\">\\n		</div>\\n	</div>\\n	<div class=\\\"row\\\">\\n		<div class=\\\"col-xs-12\\\">\\n		\");\n      data.buffer.push(escapeExpression((helper = helpers[\'auto-complete\'] || (depth0 && depth0[\'auto-complete\']),options={hash:{\n        \'search\': (\"search\"),\n        \'model\': (\"model.mikomos\")\n      },hashTypes:{\'search\': \"STRING\",\'model\': \"ID\"},hashContexts:{\'search\': depth0,\'model\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"auto-complete\", options))));\n      data.buffer.push(\"\\n		</div>\\n	</div>\\n	<p></p>\\n	<hr>\\n	<div class=\\\"row\\\">\\n		<div class=\\\"col-sm-6 text-center\\\">\\n		\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'classNames\': (\"thumbnail\")\n      },hashTypes:{\'classNames\': \"STRING\"},hashContexts:{\'classNames\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"search\", options) : helperMissing.call(depth0, \"link-to\", \"search\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n		</div>\\n		<div class=\\\"col-sm-6 text-center\\\">\\n		\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'classNames\': (\"thumbnail\")\n      },hashTypes:{\'classNames\': \"STRING\"},hashContexts:{\'classNames\': depth0},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"browse\", options) : helperMissing.call(depth0, \"link-to\", \"browse\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n		</div>\\n		<div class=\\\"col-sm-6 text-center\\\">\\n		\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'classNames\': (\"thumbnail\")\n      },hashTypes:{\'classNames\': \"STRING\"},hashContexts:{\'classNames\': depth0},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"browse\", options) : helperMissing.call(depth0, \"link-to\", \"browse\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n		</div>\\n		<div class=\\\"col-sm-6 text-center\\\">\\n		\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'classNames\': (\"thumbnail\")\n      },hashTypes:{\'classNames\': \"STRING\"},hashContexts:{\'classNames\': depth0},inverse:self.noop,fn:self.program(7, program7, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"browse\", options) : helperMissing.call(depth0, \"link-to\", \"browse\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n		</div>\\n	</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=mikomos/templates/index.js");

;eval("define(\"mikomos/templates/loading\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<center><h1>Loading Your Mikomos</h1></center>\");\n      \n    });\n  });//# sourceURL=mikomos/templates/loading.js");

;eval("define(\"mikomos/templates/makom\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, self=this, escapeExpression=this.escapeExpression;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"<span class=\\\"flaticon flaticon-\");\n      stack1 = helpers._triageMustache.call(depth0, \"\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" flaticon-1x\\\"></span> \");\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n				<h4>Things to know:</h4>\\n					<ul>\\n					\");\n      stack1 = helpers.each.call(depth0, \"tips\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n					</ul>\\n			\");\n      return buffer;\n      }\n    function program4(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n						<li>\");\n      stack1 = helpers._triageMustache.call(depth0, \"\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n					\");\n      return buffer;\n      }\n\n      data.buffer.push(\"	<div class=\\\"container\\\">\\n	<div class=\\\"row\\\">\\n		<div class=\\\"col-xs-8\\\">\\n			<h1>\");\n      stack1 = helpers._triageMustache.call(depth0, \"title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" \");\n      stack1 = helpers.each.call(depth0, \"categories\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</h1>\\n		</div>\\n		<div class=\\\"col-xs-4\\\">\\n			<div class=\\\"addthis_sharing_toolbox\\\"></div>\\n		</div>\\n	</div>\\n	<div class=\\\"row\\\">\\n		<div class=\\\"col-xs-6\\\">\\n			<h3>\");\n      stack1 = helpers._triageMustache.call(depth0, \"address\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"<br>\");\n      stack1 = helpers._triageMustache.call(depth0, \"city\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\", \");\n      stack1 = helpers._triageMustache.call(depth0, \"state\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" \");\n      stack1 = helpers._triageMustache.call(depth0, \"zip\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</h3>\\n			<h4>\");\n      stack1 = helpers._triageMustache.call(depth0, \"phone\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</h4>\\n		</div>\\n	</div>\\n	<div class=\\\"row\\\">\\n		<div class=\\\"col-xs-12\\\">\\n			<p><a \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'href\': (\"web_page\")\n      },hashTypes:{\'href\': \"ID\"},hashContexts:{\'href\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\" target=\\\"_blank\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"web_page\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</a></p>\\n			<p>\");\n      stack1 = helpers._triageMustache.call(depth0, \"basic_description\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</p>\\n			<hr>\\n			\");\n      stack1 = helpers[\'if\'].call(depth0, \"tips\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n		</div>\\n	</div>\\n	</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=mikomos/templates/makom.js");

;eval("define(\"mikomos/templates/search/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n				\");\n      data.buffer.push(escapeExpression((helper = helpers[\'results-view\'] || (depth0 && depth0[\'results-view\']),options={hash:{\n        \'model\': (\"filtered\"),\n        \'offset\': (\"offset\")\n      },hashTypes:{\'model\': \"ID\",\'offset\': \"ID\"},hashContexts:{\'model\': depth0,\'offset\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"results-view\", options))));\n      data.buffer.push(\"\\n			\");\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n				Sorry, but there are no Mikomos available within your search parameters. Please try again...\\n			\");\n      }\n\n      data.buffer.push(\"	<div class=\\\"row\\\">\\n		<div class=\\\"col-xs-2\\\">\\n			<div class=\\\"panel panel-default\\\">\\n				<div class=\\\"panel-heading\\\">\\n					<span class=\\\"panel-title\\\">Filter</span>\\n					<a class=\\\"filter-reset\\\" href=\\\"\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"resetAll\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">reset</a>\\n				</div>\\n				<div class=\\\"panel-body\\\">\\n					<div class=\\\"form-group\\\">\\n						<label>Name</label>\\n						<a class=\\\"filter-reset\\\" href=\\\"\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clearTerm\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">clear</a>\\n						\");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': (\"search\"),\n        \'classNames\': (\"form-control\"),\n        \'value\': (\"searchTerm\"),\n        \'placeholder\': (\"Search...\")\n      },hashTypes:{\'type\': \"STRING\",\'classNames\': \"STRING\",\'value\': \"ID\",\'placeholder\': \"STRING\"},hashContexts:{\'type\': depth0,\'classNames\': depth0,\'value\': depth0,\'placeholder\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n					</div>\\n					<hr>\\n					<div class=\\\"form-group\\\">\\n						<label>Country</label>\\n						\");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"Ember.Select\", {hash:{\n        \'content\': (\"countries\"),\n        \'classNames\': (\"form-control\"),\n        \'value\': (\"selectedCountry\")\n      },hashTypes:{\'content\': \"ID\",\'classNames\': \"STRING\",\'value\': \"ID\"},hashContexts:{\'content\': depth0,\'classNames\': depth0,\'value\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"\\n					</div>\\n					<div class=\\\"form-group\\\">\\n						<label>State</label>\\n						\");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"Ember.Select\", {hash:{\n        \'content\': (\"states\"),\n        \'classNames\': (\"form-control\"),\n        \'value\': (\"selectedState\")\n      },hashTypes:{\'content\': \"ID\",\'classNames\': \"STRING\",\'value\': \"ID\"},hashContexts:{\'content\': depth0,\'classNames\': depth0,\'value\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"\\n					</div>\\n					<div class=\\\"form-group\\\">\\n						<label>Neighborhood</label>\\n						\");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"Ember.Select\", {hash:{\n        \'content\': (\"neighborhoods\"),\n        \'classNames\': (\"form-control\"),\n        \'value\': (\"neighborhood\")\n      },hashTypes:{\'content\': \"ID\",\'classNames\': \"STRING\",\'value\': \"ID\"},hashContexts:{\'content\': depth0,\'classNames\': depth0,\'value\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"\\n					</div>\\n					<hr>\\n					<div class=\\\"form-group\\\">\\n						<label>Category</label>\\n						<a class=\\\"filter-reset\\\" href=\\\"\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clearCategory\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">clear</a>\\n						\");\n      data.buffer.push(escapeExpression((helper = helpers[\'radio-group\'] || (depth0 && depth0[\'radio-group\']),options={hash:{\n        \'content\': (\"categories\"),\n        \'value\': (\"selectedCategory\")\n      },hashTypes:{\'content\': \"ID\",\'value\': \"ID\"},hashContexts:{\'content\': depth0,\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"radio-group\", options))));\n      data.buffer.push(\"\\n					</div>\\n				</div>\\n			</div>\\n		</div>\\n		<div class=\\\"col-xs-10\\\">\\n			<h1>Advanced Search</h1>\\n			\");\n      stack1 = helpers[\'if\'].call(depth0, \"filtered\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n		</div>\\n	</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=mikomos/templates/search/index.js");

;eval("define(\"mikomos/templates/search/query\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"	<h1>Search Results</h1>\\n	<p>Search Term: \");\n      stack1 = helpers._triageMustache.call(depth0, \"query\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</p>\\n	\");\n      data.buffer.push(escapeExpression((helper = helpers[\'results-view\'] || (depth0 && depth0[\'results-view\']),options={hash:{\n        \'model\': (\"model\")\n      },hashTypes:{\'model\': \"ID\"},hashContexts:{\'model\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"results-view\", options))));\n      return buffer;\n      \n    });\n  });//# sourceURL=mikomos/templates/search/query.js");

;eval("define(\"mikomos/tests/helpers/resolver\", \n  [\"ember/resolver\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: \'mikomos\'\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=mikomos/tests/helpers/resolver.js");

;eval("define(\"mikomos/tests/helpers/start-app\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    /* global require */\n\n    var Application = require(\'mikomos/app\')[\'default\'];\n    var Router = require(\'mikomos/router\')[\'default\'];\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({\n        // useful Test defaults\n        rootElement: \'#ember-testing\',\n        LOG_ACTIVE_GENERATION:false,\n        LOG_VIEW_LOOKUPS: false\n      }, attrs); // but you can override;\n\n      Router.reopen({\n        location: \'none\'\n      });\n\n      Ember.run(function(){\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      App.reset(); // this shouldn\'t be needed, i want to be able to \"start an app at a specific URL\"\n\n      return App;\n    }\n  });//# sourceURL=mikomos/tests/helpers/start-app.js");

;eval("define(\"mikomos/tests/mikomos/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - mikomos\');\n    test(\'mikomos/app.js should pass jshint\', function() { \n      ok(true, \'mikomos/app.js should pass jshint.\'); \n    });\n  });//# sourceURL=mikomos/tests/mikomos/app.jshint.js");

;eval("define(\"mikomos/tests/mikomos/components/auto-complete.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - mikomos/components\');\n    test(\'mikomos/components/auto-complete.js should pass jshint\', function() { \n      ok(true, \'mikomos/components/auto-complete.js should pass jshint.\'); \n    });\n  });//# sourceURL=mikomos/tests/mikomos/components/auto-complete.jshint.js");

;eval("define(\"mikomos/tests/mikomos/components/back-button.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - mikomos/components\');\n    test(\'mikomos/components/back-button.js should pass jshint\', function() { \n      ok(true, \'mikomos/components/back-button.js should pass jshint.\'); \n    });\n  });//# sourceURL=mikomos/tests/mikomos/components/back-button.jshint.js");

;eval("define(\"mikomos/tests/mikomos/components/radio-button.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - mikomos/components\');\n    test(\'mikomos/components/radio-button.js should pass jshint\', function() { \n      ok(true, \'mikomos/components/radio-button.js should pass jshint.\'); \n    });\n  });//# sourceURL=mikomos/tests/mikomos/components/radio-button.jshint.js");

;eval("define(\"mikomos/tests/mikomos/components/results-view.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - mikomos/components\');\n    test(\'mikomos/components/results-view.js should pass jshint\', function() { \n      ok(true, \'mikomos/components/results-view.js should pass jshint.\'); \n    });\n  });//# sourceURL=mikomos/tests/mikomos/components/results-view.jshint.js");

;eval("define(\"mikomos/tests/mikomos/controllers/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - mikomos/controllers\');\n    test(\'mikomos/controllers/application.js should pass jshint\', function() { \n      ok(true, \'mikomos/controllers/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=mikomos/tests/mikomos/controllers/application.jshint.js");

;eval("define(\"mikomos/tests/mikomos/controllers/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - mikomos/controllers\');\n    test(\'mikomos/controllers/index.js should pass jshint\', function() { \n      ok(true, \'mikomos/controllers/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=mikomos/tests/mikomos/controllers/index.jshint.js");

;eval("define(\"mikomos/tests/mikomos/controllers/search/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - mikomos/controllers/search\');\n    test(\'mikomos/controllers/search/index.js should pass jshint\', function() { \n      ok(true, \'mikomos/controllers/search/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=mikomos/tests/mikomos/controllers/search/index.jshint.js");

;eval("define(\"mikomos/tests/mikomos/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - mikomos\');\n    test(\'mikomos/router.js should pass jshint\', function() { \n      ok(true, \'mikomos/router.js should pass jshint.\'); \n    });\n  });//# sourceURL=mikomos/tests/mikomos/router.jshint.js");

;eval("define(\"mikomos/tests/mikomos/routes/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - mikomos/routes\');\n    test(\'mikomos/routes/application.js should pass jshint\', function() { \n      ok(true, \'mikomos/routes/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=mikomos/tests/mikomos/routes/application.jshint.js");

;eval("define(\"mikomos/tests/mikomos/routes/browse.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - mikomos/routes\');\n    test(\'mikomos/routes/browse.js should pass jshint\', function() { \n      ok(true, \'mikomos/routes/browse.js should pass jshint.\'); \n    });\n  });//# sourceURL=mikomos/tests/mikomos/routes/browse.jshint.js");

;eval("define(\"mikomos/tests/mikomos/routes/makom.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - mikomos/routes\');\n    test(\'mikomos/routes/makom.js should pass jshint\', function() { \n      ok(true, \'mikomos/routes/makom.js should pass jshint.\'); \n    });\n  });//# sourceURL=mikomos/tests/mikomos/routes/makom.jshint.js");

;eval("define(\"mikomos/tests/mikomos/routes/search/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - mikomos/routes/search\');\n    test(\'mikomos/routes/search/index.js should pass jshint\', function() { \n      ok(true, \'mikomos/routes/search/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=mikomos/tests/mikomos/routes/search/index.jshint.js");

;eval("define(\"mikomos/tests/mikomos/routes/search/query.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - mikomos/routes/search\');\n    test(\'mikomos/routes/search/query.js should pass jshint\', function() { \n      ok(true, \'mikomos/routes/search/query.js should pass jshint.\'); \n    });\n  });//# sourceURL=mikomos/tests/mikomos/routes/search/query.jshint.js");

;eval("define(\"mikomos/tests/mikomos/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - mikomos/tests/helpers\');\n    test(\'mikomos/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'mikomos/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=mikomos/tests/mikomos/tests/helpers/resolver.jshint.js");

;eval("define(\"mikomos/tests/mikomos/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - mikomos/tests/helpers\');\n    test(\'mikomos/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'mikomos/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=mikomos/tests/mikomos/tests/helpers/start-app.jshint.js");

;eval("define(\"mikomos/tests/mikomos/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - mikomos/tests\');\n    test(\'mikomos/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'mikomos/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=mikomos/tests/mikomos/tests/test-helper.jshint.js");

;eval("define(\"mikomos/tests/test-helper\", \n  [\"mikomos/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n  });//# sourceURL=mikomos/tests/test-helper.js");
